
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author piyush veerbhan
 */
public class Others extends javax.swing.JFrame {
Connection con = null;
PreparedStatement pst = null;
ResultSet rs = null;
 float remaining=0;
 int count=0;
    /**
     * Creates new form Nails
     */
    public Others() throws SQLException {
        initComponents();
        ShowCombo();
        showTableData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nailfiledrec = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        nailtable = new javax.swing.JTable();
        SiteNamelabel5 = new javax.swing.JLabel();
        SiteNamelabel6 = new javax.swing.JLabel();
        naildate = new com.toedter.calendar.JDateChooser();
        nailfiledrate = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        nailfiledvehicle = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        nailfiledsuppler = new javax.swing.JTextField();
        nailfiledbill = new javax.swing.JTextField();
        SiteNamelabel = new javax.swing.JLabel();
        nailbtnsubmit = new javax.swing.JButton();
        SiteNamelabel1 = new javax.swing.JLabel();
        nailbtnupdate = new javax.swing.JButton();
        SiteNamelabel2 = new javax.swing.JLabel();
        nailbtnbck = new javax.swing.JButton();
        SiteNamelabel3 = new javax.swing.JLabel();
        nailfiledconsume = new javax.swing.JTextField();
        SiteNamelabel4 = new javax.swing.JLabel();
        btndel = new javax.swing.JButton();
        SiteNamelabel7 = new javax.swing.JLabel();
        SiteNamelabel8 = new javax.swing.JLabel();
        namefield = new javax.swing.JTextField();
        combosite = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        nailfiledrec.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                nailfiledrecFocusLost(evt);
            }
        });
        nailfiledrec.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nailfiledrecKeyTyped(evt);
            }
        });

        nailtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Date", "Receive", "Consume", "Rate", "Vehicle No.", "Suppler Name", "Bill No.", "Remaining"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        nailtable.getTableHeader().setReorderingAllowed(false);
        nailtable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nailtableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(nailtable);

        SiteNamelabel5.setText(" Suppler Name");

        SiteNamelabel6.setText("  Bill No.");

        nailfiledrate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                nailfiledrateFocusLost(evt);
            }
        });
        nailfiledrate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nailfiledrateKeyTyped(evt);
            }
        });

        jLabel1.setText("Tons");

        jLabel2.setText("Tons");

        nailfiledbill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nailfiledbillActionPerformed(evt);
            }
        });

        SiteNamelabel.setText("    Date");

        nailbtnsubmit.setText("Submit");
        nailbtnsubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nailbtnsubmitActionPerformed(evt);
            }
        });

        SiteNamelabel1.setText("   Receive");

        nailbtnupdate.setText("Update");
        nailbtnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nailbtnupdateActionPerformed(evt);
            }
        });

        SiteNamelabel2.setText("   Rate");

        nailbtnbck.setText("Back");
        nailbtnbck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nailbtnbckActionPerformed(evt);
            }
        });

        SiteNamelabel3.setText("  Vehicle No.");

        nailfiledconsume.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                nailfiledconsumeFocusLost(evt);
            }
        });
        nailfiledconsume.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nailfiledconsumeActionPerformed(evt);
            }
        });
        nailfiledconsume.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nailfiledconsumeKeyTyped(evt);
            }
        });

        SiteNamelabel4.setText("  Consume");

        btndel.setText("Delete");
        btndel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndelActionPerformed(evt);
            }
        });

        SiteNamelabel7.setText("Name");

        SiteNamelabel8.setText("Select Site Name");

        combosite.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                combositePopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nailbtnbck)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nailbtnsubmit)
                        .addGap(19, 19, 19)
                        .addComponent(nailbtnupdate)
                        .addGap(18, 18, 18)
                        .addComponent(btndel))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SiteNamelabel, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SiteNamelabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SiteNamelabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SiteNamelabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SiteNamelabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SiteNamelabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SiteNamelabel5)
                            .addComponent(SiteNamelabel8)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(SiteNamelabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(nailfiledbill)
                                    .addComponent(nailfiledsuppler)
                                    .addComponent(nailfiledvehicle)
                                    .addComponent(nailfiledrate)
                                    .addComponent(nailfiledconsume)
                                    .addComponent(nailfiledrec, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)))
                            .addComponent(naildate, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(combosite, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(namefield, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 733, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SiteNamelabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combosite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SiteNamelabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(namefield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(SiteNamelabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(naildate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(SiteNamelabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(nailfiledrec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SiteNamelabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nailfiledconsume, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SiteNamelabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nailfiledrate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SiteNamelabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nailfiledvehicle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SiteNamelabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nailfiledsuppler, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SiteNamelabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nailfiledbill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nailbtnsubmit)
                    .addComponent(nailbtnupdate)
                    .addComponent(btndel))
                .addGap(51, 51, 51)
                .addComponent(nailbtnbck)
                .addGap(32, 32, 32))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nailfiledbillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nailfiledbillActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nailfiledbillActionPerformed

    private void nailbtnbckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nailbtnbckActionPerformed
        new Material().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_nailbtnbckActionPerformed

    private void nailfiledconsumeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nailfiledconsumeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nailfiledconsumeActionPerformed

    private void nailbtnsubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nailbtnsubmitActionPerformed
        try {
             if(((JTextField) naildate.getDateEditor().getUiComponent()).getText().length()==0){
             JOptionPane.showMessageDialog(null, "Date Can not be empty");
             return;
            }
            if(nailfiledrec.getText().length()==0||nailfiledconsume.getText().length()==0||nailfiledrate.getText().length()==0||namefield.getText().length()==0){
            JOptionPane.showMessageDialog(null, "Any field from Receive,consume,Name or rate is Empty");
            return;
            }
       float remain;
       remian();
       //System.out.println(remaining);
    remain=(Float.parseFloat(nailfiledrec.getText()))-(Float.parseFloat(nailfiledconsume.getText()))+remaining;
        String name=combosite.getSelectedItem().toString();
        String tablename=name+"other";
        con = DriverManager.getConnection("jdbc:mysql://localhost/user","root","root");
        

rs=con.getMetaData().getTables(null, null, null, null);
while(rs.next()){
    
    String check=rs.getString("Table_Name");
if(check!=null &&check.equalsIgnoreCase(tablename)){
String sql = "INSERT INTO "+tablename
        +"(Name, Date, Receive, Consume, Rate, VehicleNo, SupplerName, Receipt, Remaining)"
+"VALUES (?,?,?,?,?,?,?,?,?)";
con = DriverManager.getConnection("jdbc:mysql://localhost/user","root","root");
pst = con.prepareStatement(sql);
pst.setString(1,namefield.getText());
pst.setString(2,((JTextField) naildate.getDateEditor().getUiComponent()).getText());
pst.setString(3,nailfiledrec.getText());
pst.setString(4,nailfiledconsume.getText());
pst.setString(5,nailfiledrate.getText());
pst.setString(6,nailfiledvehicle.getText());
pst.setString(7,nailfiledsuppler.getText());
pst.setString(8,nailfiledbill.getText());
pst.setFloat(9,remain);
pst.executeUpdate();
showTableData();
refresh();
return ;
}

} 

pst.executeUpdate("CREATE TABLE "+ tablename +
                "("+"Name TEXT(35),Date TEXT(25),Receive FLOAT(10),Consume FLOAT(10),Rate FLOAT(10),VehicleNo VARCHAR(20),SupplerName TEXT(30),Receipt VARCHAR(25),Remaining FLOAT(20))");
String sql = "INSERT INTO "+tablename
        +"(Name, Date, Receive, Consume, Rate, VehicleNo, SupplerName, Receipt, Remaining)"
+"VALUES (?,?,?,?,?,?,?,?,?)";
con = DriverManager.getConnection("jdbc:mysql://localhost/user","root","root");
pst = con.prepareStatement(sql);
pst.setString(1,namefield.getText());
pst.setString(2,((JTextField) naildate.getDateEditor().getUiComponent()).getText());
pst.setString(3,nailfiledrec.getText());
pst.setString(4,nailfiledconsume.getText());
pst.setString(5,nailfiledrate.getText());
pst.setString(6,nailfiledvehicle.getText());
pst.setString(7,nailfiledsuppler.getText());
pst.setString(8,nailfiledbill.getText());
pst.setFloat(9,remain);
pst.executeUpdate();
showTableData();
refresh();


       
        
        
    } catch (SQLException ex) {
       
        Logger.getLogger(NewcontractorForm.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_nailbtnsubmitActionPerformed

    private void combositePopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_combositePopupMenuWillBecomeInvisible
        try{
    
        String name=combosite.getSelectedItem().toString();
        String tablename=name+"other";
con = DriverManager.getConnection("jdbc:mysql://localhost/user","root","root");
rs=con.getMetaData().getTables(null, null, null, null);
while(rs.next()){
    String check=rs.getString("Table_Name");
if(check!=null &&check.equalsIgnoreCase(tablename)){
String sql = "SELECT * FROM "+tablename;
pst = con.prepareStatement(sql);
rs=pst.executeQuery();
nailtable.setModel(DbUtils.resultSetToTableModel(rs));
}}}
catch(Exception ex){
JOptionPane.showMessageDialog(null, ex);
 
}
    }//GEN-LAST:event_combositePopupMenuWillBecomeInvisible
private void refresh(){
    //naildate.setDateFormatString("");
namefield.setText("");
nailfiledrec.setText("");
nailfiledconsume.setText("");
nailfiledrate.setText("");
nailfiledvehicle.setText("");
nailfiledsuppler.setText("");
nailfiledbill.setText("");
//steelfieldrec.setText("");




}
    private void nailtableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nailtableMouseClicked
        int i=nailtable.getSelectedRow();
        TableModel model=nailtable.getModel();
        namefield.setText(model.getValueAt(i,0).toString());
        String date=model.getValueAt(i,1).toString();
        nailfiledrec.setText(model.getValueAt(i,2).toString());
        nailfiledconsume.setText(model.getValueAt(i,3).toString());
        nailfiledrate.setText(model.getValueAt(i,4).toString());
        nailfiledvehicle.setText(model.getValueAt(i,5).toString());
        nailfiledsuppler.setText(model.getValueAt(i,6).toString());
        nailfiledbill.setText(model.getValueAt(i,7).toString());
        ((JTextField) naildate.getDateEditor().getUiComponent()).setText(date);
        
    }//GEN-LAST:event_nailtableMouseClicked

    private void nailbtnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nailbtnupdateActionPerformed
       try {
       float remain;
       remian();
       //System.out.println(remaining);
   remain=(Float.parseFloat(nailfiledrec.getText()))-(Float.parseFloat(nailfiledconsume.getText()))+remaining;
        String name=combosite.getSelectedItem().toString();
        String tablename=name+"other";
        con = DriverManager.getConnection("jdbc:mysql://localhost/user","root","root");
        

rs=con.getMetaData().getTables(null, null, null, null);
while(rs.next()){
    
    String check=rs.getString("Table_Name");
if(check!=null &&check.equalsIgnoreCase(tablename)){
String sql = "UPDATE "+tablename
        +" SET Name=?, Date=?, Receive=?, Consume=?, Rate=?, VehicleNo=?, SupplerName=?, Receipt=?, Remaining=? WHERE Date=?";
con = DriverManager.getConnection("jdbc:mysql://localhost/user","root","root");
pst = con.prepareStatement(sql);
pst.setString(1,namefield.getText());
pst.setString(2,((JTextField) naildate.getDateEditor().getUiComponent()).getText());
pst.setString(3,nailfiledrec.getText());
pst.setString(4,nailfiledconsume.getText());
pst.setString(5,nailfiledrate.getText());
pst.setString(6,nailfiledvehicle.getText());
pst.setString(7,nailfiledsuppler.getText());
pst.setString(8,nailfiledbill.getText());
pst.setFloat(9,remain);
pst.setString(10,((JTextField) naildate.getDateEditor().getUiComponent()).getText());
pst.executeUpdate();
showTableData();
refresh();
return ;
}

} 

} catch (SQLException ex) {
       
        Logger.getLogger(NewcontractorForm.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_nailbtnupdateActionPerformed

    private void btndelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndelActionPerformed
      try {
       float remain;
       remian();
       //System.out.println(remaining);
    remain=(Float.parseFloat(nailfiledrec.getText()))-(Float.parseFloat(nailfiledconsume.getText()))+remaining;
        String name=combosite.getSelectedItem().toString();
        String tablename=name+"other";
        con = DriverManager.getConnection("jdbc:mysql://localhost/user","root","root");
        

rs=con.getMetaData().getTables(null, null, null, null);
while(rs.next()){
    
    String check=rs.getString("Table_Name");
if(check!=null &&check.equalsIgnoreCase(tablename)){
String sql = "DELETE FROM "+tablename
        +" WHERE Date=?";
con = DriverManager.getConnection("jdbc:mysql://localhost/user","root","root");
pst = con.prepareStatement(sql);

pst.setString(1,((JTextField) naildate.getDateEditor().getUiComponent()).getText());

pst.executeUpdate();
showTableData();
refresh();
return ;
}

} 

} catch (SQLException ex) {
       
        Logger.getLogger(NewcontractorForm.class.getName()).log(Level.SEVERE, null, ex);
    } 
    }//GEN-LAST:event_btndelActionPerformed

    private void nailfiledrecKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nailfiledrecKeyTyped
 char input=evt.getKeyChar();
       
    if((input<'0'|| input >'9') && input!= '\b' && input!='.'){
        JOptionPane.showMessageDialog(null,"Only Numbers");
    evt.consume();
    }
if(input=='.'){
count++;}
if(count>1){
    System.out.println();
    evt.consume();
    count--;
//JOptionPane.showMessageDialog(null,"Two Decimals are not allow");
}       // TODO add your handling code here:
    }//GEN-LAST:event_nailfiledrecKeyTyped

    private void nailfiledconsumeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nailfiledconsumeKeyTyped
 char input=evt.getKeyChar();
       
    if((input<'0'|| input >'9') && input!= '\b' && input!='.'){
        JOptionPane.showMessageDialog(null,"Only Numbers");
    evt.consume();
    }
if(input=='.'){
count++;}
if(count>1){
    System.out.println();
    evt.consume();
    count--;
//JOptionPane.showMessageDialog(null,"Two Decimals are not allow");
}       // TODO add your handling code here:
    }//GEN-LAST:event_nailfiledconsumeKeyTyped

    private void nailfiledrateKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nailfiledrateKeyTyped
 char input=evt.getKeyChar();
       
    if((input<'0'|| input >'9') && input!= '\b' && input!='.'){
        JOptionPane.showMessageDialog(null,"Only Numbers");
    evt.consume();
    }
if(input=='.'){
count++;}
if(count>1){
    System.out.println();
    evt.consume();
    count--;
//JOptionPane.showMessageDialog(null,"Two Decimals are not allow");
}       // TODO add your handling code here:
    }//GEN-LAST:event_nailfiledrateKeyTyped

    private void nailfiledrecFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nailfiledrecFocusLost
count=0;        // TODO add your handling code here:
    }//GEN-LAST:event_nailfiledrecFocusLost

    private void nailfiledconsumeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nailfiledconsumeFocusLost
count=0;        // TODO add your handling code here:
    }//GEN-LAST:event_nailfiledconsumeFocusLost

    private void nailfiledrateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nailfiledrateFocusLost
count=0;        // TODO add your handling code here:
    }//GEN-LAST:event_nailfiledrateFocusLost
private void remian(){
try{
   if(combosite.getSelectedItem()!=null){
        String name=combosite.getSelectedItem().toString();
        String tablename=name+"other";
con = DriverManager.getConnection("jdbc:mysql://localhost/user","root","root");
rs=con.getMetaData().getTables(null, null, null, null);
while(rs.next()){
    String check=rs.getString("Table_Name");
if(check!=null &&check.equalsIgnoreCase(tablename)){
String sql = "SELECT Remaining FROM "+tablename+" ORDER BY Remaining DESC LIMIT 1";
    //System.out.println(sql);
pst = con.prepareStatement(sql);
rs=pst.executeQuery();
rs.next();
remaining=rs.getInt(1);
//System.out.println(remaining);
}}}
   else{
   return;
   }

}
catch(Exception ex){
JOptionPane.showMessageDialog(null, ex);
 
}


}
public void showTableData(){

 try{
    
        String name=combosite.getSelectedItem().toString();
        String tablename=name+"other";
con = DriverManager.getConnection("jdbc:mysql://localhost/user","root","root");
rs=con.getMetaData().getTables(null, null, null, null);
while(rs.next()){
    String check=rs.getString("Table_Name");
if(check!=null &&check.equalsIgnoreCase(tablename)){
String sql = "SELECT * FROM "+tablename;
pst = con.prepareStatement(sql);
rs=pst.executeQuery();
nailtable.setModel(DbUtils.resultSetToTableModel(rs));
}}}
catch(Exception ex){
 JOptionPane.showMessageDialog(null,"Please Add A Site First");
 
}}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Others.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Others.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Others.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Others.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Others().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(Others.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
private void ShowCombo() throws SQLException{
    
con = DriverManager.getConnection("jdbc:mysql://localhost/user","root","root");
String sql = "SELECT * FROM site";
pst = con.prepareStatement(sql);
rs=pst.executeQuery(sql);
while((rs.next())){
    String name=rs.getString("SiteName");
combosite.addItem(name);


}}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel SiteNamelabel;
    private javax.swing.JLabel SiteNamelabel1;
    private javax.swing.JLabel SiteNamelabel2;
    private javax.swing.JLabel SiteNamelabel3;
    private javax.swing.JLabel SiteNamelabel4;
    private javax.swing.JLabel SiteNamelabel5;
    private javax.swing.JLabel SiteNamelabel6;
    private javax.swing.JLabel SiteNamelabel7;
    private javax.swing.JLabel SiteNamelabel8;
    private javax.swing.JButton btndel;
    private javax.swing.JComboBox combosite;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton nailbtnbck;
    private javax.swing.JButton nailbtnsubmit;
    private javax.swing.JButton nailbtnupdate;
    private com.toedter.calendar.JDateChooser naildate;
    private javax.swing.JTextField nailfiledbill;
    private javax.swing.JTextField nailfiledconsume;
    private javax.swing.JTextField nailfiledrate;
    private javax.swing.JTextField nailfiledrec;
    private javax.swing.JTextField nailfiledsuppler;
    private javax.swing.JTextField nailfiledvehicle;
    private javax.swing.JTable nailtable;
    private javax.swing.JTextField namefield;
    // End of variables declaration//GEN-END:variables
}
