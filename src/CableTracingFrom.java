
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Dell
 */
public class CableTracingFrom extends javax.swing.JFrame {
     Connection con=null;
    ResultSet rs=null;
    PreparedStatement pst = null;
    int count=0;
    float excavation;
    float pcc;
    float bar;
    float shuttring;
    float raft;
    float Boltleftfield;
    float Boltfinal;
    float size1;
    float totalamount;
    String s="cabletrace";
    float total;
   int id;
    
    
    void total(){
         excavation =Float.parseFloat(excavationEquipfield.getText())*Float.parseFloat(cableexcavationRatefield.getText());
         pcc =Float.parseFloat(pccEqiofield.getText())*Float.parseFloat(contaddressfield2.getText());
         bar =Float.parseFloat(barBARfield.getText())*Float.parseFloat(cablebarRatefield.getText());
         shuttring =Float.parseFloat(shuttringEQuipfiled.getText())*Float.parseFloat(cableshuttringratefield.getText());
         raft =Float.parseFloat(LtextfieldCable.getText())*Float.parseFloat(bCablefield.getText());
          size1 =Float.parseFloat(LtextfieldCable.getText())*Float.parseFloat(bCablefield.getText())*Float.parseFloat(HCablefield.getText());
         totalamount=excavation+pcc+bar+shuttring+raft;
    }

    /**
     * Creates new form CableTracingFrom
     */
     showTable st=new showTable();
    public CableTracingFrom() {
        initComponents();
        st.ShowdropDown(selectSite);
       st.showTableData(tablecable, selectSite, s);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Quantityequip = new javax.swing.JTextField();
        size = new javax.swing.JLabel();
        barBARfield = new javax.swing.JTextField();
        pccEqiofield = new javax.swing.JTextField();
        totaltower = new javax.swing.JLabel();
        shuttringEQuipfiled = new javax.swing.JTextField();
        bCablefield = new javax.swing.JTextField();
        pcctower = new javax.swing.JLabel();
        cableheadinglabel = new javax.swing.JLabel();
        HCablefield = new javax.swing.JTextField();
        datecablefield = new com.toedter.calendar.JDateChooser();
        datetowerlabel1 = new javax.swing.JLabel();
        cablenamefield = new javax.swing.JTextField();
        cableexcavationRatefield = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        contaddressfield2 = new javax.swing.JTextField();
        backcablewrbutton = new javax.swing.JButton();
        Cabledelbuttton = new javax.swing.JButton();
        cablebarRatefield = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablecable = new javax.swing.JTable();
        excavationEquipfield = new javax.swing.JTextField();
        excavationtower = new javax.swing.JLabel();
        completetower = new javax.swing.JLabel();
        Cablesubmitbutton = new javax.swing.JButton();
        cableshuttringratefield = new javax.swing.JTextField();
        barbindtower = new javax.swing.JLabel();
        Shuttringtower = new javax.swing.JLabel();
        LtextfieldCable = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        selectSite = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Quantityequip.setText("0");
        Quantityequip.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                QuantityequipFocusLost(evt);
            }
        });
        Quantityequip.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                QuantityequipKeyTyped(evt);
            }
        });

        size.setText("Size");

        barBARfield.setText("0");
        barBARfield.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                barBARfieldFocusLost(evt);
            }
        });
        barBARfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                barBARfieldActionPerformed(evt);
            }
        });
        barBARfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                barBARfieldKeyTyped(evt);
            }
        });

        pccEqiofield.setText("0");
        pccEqiofield.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                pccEqiofieldFocusLost(evt);
            }
        });
        pccEqiofield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pccEqiofieldKeyTyped(evt);
            }
        });

        totaltower.setText("Name  ");

        shuttringEQuipfiled.setText("0");
        shuttringEQuipfiled.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                shuttringEQuipfiledFocusLost(evt);
            }
        });
        shuttringEQuipfiled.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                shuttringEQuipfiledKeyTyped(evt);
            }
        });

        bCablefield.setText("0");
        bCablefield.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                bCablefieldFocusLost(evt);
            }
        });
        bCablefield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCablefieldActionPerformed(evt);
            }
        });
        bCablefield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                bCablefieldKeyTyped(evt);
            }
        });

        pcctower.setText("Pcc");

        cableheadinglabel.setText("Add Cable Details");

        HCablefield.setText("0");
        HCablefield.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                HCablefieldFocusLost(evt);
            }
        });
        HCablefield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                HCablefieldKeyTyped(evt);
            }
        });

        datetowerlabel1.setText("Date");

        cableexcavationRatefield.setText("0");
        cableexcavationRatefield.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cableexcavationRatefieldFocusLost(evt);
            }
        });
        cableexcavationRatefield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cableexcavationRatefieldKeyTyped(evt);
            }
        });

        jLabel2.setText("Rate");

        contaddressfield2.setText("0");
        contaddressfield2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                contaddressfield2FocusLost(evt);
            }
        });
        contaddressfield2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                contaddressfield2KeyTyped(evt);
            }
        });

        backcablewrbutton.setText("Back");
        backcablewrbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backcablewrbuttonActionPerformed(evt);
            }
        });

        Cabledelbuttton.setText("Delete");
        Cabledelbuttton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CabledelbutttonActionPerformed(evt);
            }
        });

        cablebarRatefield.setText("0");
        cablebarRatefield.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cablebarRatefieldFocusLost(evt);
            }
        });
        cablebarRatefield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cablebarRatefieldActionPerformed(evt);
            }
        });
        cablebarRatefield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cablebarRatefieldKeyTyped(evt);
            }
        });

        tablecable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Date", "Quantity", "Excavatiion", "Pcc", "Bar Binding", "Shuttring", "Raft", "Size", "Totalamount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tablecable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablecableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tablecable);

        excavationEquipfield.setText("0");
        excavationEquipfield.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                excavationEquipfieldFocusLost(evt);
            }
        });
        excavationEquipfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excavationEquipfieldActionPerformed(evt);
            }
        });
        excavationEquipfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                excavationEquipfieldKeyTyped(evt);
            }
        });

        excavationtower.setText("Excavation");

        completetower.setText("Quantity");

        Cablesubmitbutton.setText("Submit");
        Cablesubmitbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CablesubmitbuttonActionPerformed(evt);
            }
        });

        cableshuttringratefield.setText("0");
        cableshuttringratefield.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cableshuttringratefieldFocusLost(evt);
            }
        });
        cableshuttringratefield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cableshuttringratefieldKeyTyped(evt);
            }
        });

        barbindtower.setText("Bar Binding");

        Shuttringtower.setText("Shuttring");

        LtextfieldCable.setText("0");
        LtextfieldCable.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                LtextfieldCableFocusLost(evt);
            }
        });
        LtextfieldCable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                LtextfieldCableKeyTyped(evt);
            }
        });

        jLabel1.setText("Select Site");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(completetower, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(46, 46, 46)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(excavationEquipfield, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                                    .addComponent(pccEqiofield, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(barBARfield, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(shuttringEQuipfiled, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Quantityequip))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(cableshuttringratefield, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                                    .addComponent(cablebarRatefield, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(contaddressfield2, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cableexcavationRatefield, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGap(13, 13, 13)
                                        .addComponent(jLabel2))))
                            .addComponent(barbindtower, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pcctower, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Shuttringtower, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(excavationtower, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(datetowerlabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(totaltower)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(71, 71, 71)
                                .addComponent(cableheadinglabel, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(backcablewrbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(size, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Cablesubmitbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Cabledelbuttton)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(LtextfieldCable, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(bCablefield, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(HCablefield, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(39, 39, 39))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(datecablefield, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(selectSite, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(cablenamefield, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE))
                                .addGap(82, 82, 82)))))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 768, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cableheadinglabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(selectSite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(totaltower)
                            .addComponent(cablenamefield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(datecablefield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(datetowerlabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Quantityequip, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(completetower)
                                .addComponent(jLabel2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(excavationEquipfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(excavationtower))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pcctower)
                                    .addComponent(pccEqiofield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(barbindtower)
                                    .addComponent(barBARfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(shuttringEQuipfiled, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Shuttringtower, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cableexcavationRatefield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(contaddressfield2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cablebarRatefield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(cableshuttringratefield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(size, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LtextfieldCable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bCablefield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HCablefield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Cablesubmitbutton)
                            .addComponent(Cabledelbuttton))
                        .addGap(26, 26, 26)
                        .addComponent(backcablewrbutton))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(65, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bCablefieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCablefieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bCablefieldActionPerformed

    private void backcablewrbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backcablewrbuttonActionPerformed
        new WorkDone().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_backcablewrbuttonActionPerformed

    private void CabledelbutttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CabledelbutttonActionPerformed
         try {
       
             if(id==0){
                JOptionPane.showMessageDialog(null, "Please select The Field From Table First");
                return;
            }
        String name=selectSite.getSelectedItem().toString();
        String tablename=name+s;
        con = DriverManager.getConnection("jdbc:mysql://localhost/user","root","root");
        

rs=con.getMetaData().getTables(null, null, null, null);
while(rs.next()){
    String check=rs.getString("Table_Name");
if(check!=null &&check.equalsIgnoreCase(tablename)){
String sql = "DELETE FROM "+tablename+" WHERE ID=?";
            con = DriverManager.getConnection("jdbc:mysql://localhost/user","root","root");
            pst = con.prepareStatement(sql);
            pst.setInt(1,id);
            pst.executeUpdate();
            st.showTableData(tablecable, selectSite, s);
            JOptionPane.showMessageDialog(null, "delete successfully");
refresh();
id=0;
return ;
}

}
        } catch (SQLException ex) {
       
        JOptionPane.showMessageDialog(null,  "please enter all the details or fill it correctly");
    }

    }//GEN-LAST:event_CabledelbutttonActionPerformed

    private void CablesubmitbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CablesubmitbuttonActionPerformed
        try {
            
            
            
            if(((JTextField) datecablefield.getDateEditor().getUiComponent()).getText().length()==0){
             JOptionPane.showMessageDialog(null, "Date Can not be empty");
             return;
                    }
                    if(cablenamefield.getText().length()==0){
                        JOptionPane.showMessageDialog(null, "Name Can not be empty");
             return;
                    }
            
                   total();
                     remian();

                     float New_total=total+totalamount;
       
        String name=selectSite.getSelectedItem().toString();
        
        String tablename=name+"cabletrace";
        con = DriverManager.getConnection("jdbc:mysql://localhost/user","root","root");
        

rs=con.getMetaData().getTables(null, null, null, null);
while(rs.next()){
    String check=rs.getString("Table_Name");
if(check!=null &&check.equalsIgnoreCase(tablename)){
String sql = "INSERT INTO "+tablename
        +"(Name, Date, Quantity, Excavation, Pcc, BarBinding, Shuttring,Raft,Size,Totalamount)"
+"VALUES (?,?,?,?,?,?,?,?,?,?)";
con = DriverManager.getConnection("jdbc:mysql://localhost/user","root","root");
pst = con.prepareStatement(sql);
pst.setString(1,cablenamefield.getText());
pst.setString(2,((JTextField) datecablefield.getDateEditor().getUiComponent()).getText());
pst.setFloat(3,Float.parseFloat(Quantityequip.getText()));
pst.setFloat(4,excavation);
pst.setFloat(5,pcc);
pst.setFloat(6,bar);
pst.setFloat(7,shuttring);
pst.setFloat(8,raft);


pst.setFloat(9,size1);
pst.setFloat(10,New_total);

//pst.setString(11,((JTextField) datecablefield.getDateEditor().getUiComponent()).getText());

pst.executeUpdate();
st.showTableData(tablecable, selectSite, s);
refresh();
return ;
}

} 
  System.out.println("chal bc");
String sql1="CREATE TABLE "+ tablename +
                "("+"ID INT NOT NULL AUTO_INCREMENT, Name Text(20), Date TEXT(25),Quantity FLOAT(10),Excavation FLOAT(15),Pcc FLOAT(15),BarBinding FLOAT(10)"
        + ",Shuttring FLOAT(30),Raft FLOAT(30),Size FLOAT(30),Totalamount FLOAT(30),PRIMARY KEY(ID))";
//System.out.println(sql1);
con = DriverManager.getConnection("jdbc:mysql://localhost/user","root","root");
pst = con.prepareStatement(sql1);
pst.executeUpdate(sql1);
String sql = "INSERT INTO "+tablename
        +"(Name, Date, Quantity, Excavation, Pcc, BarBinding, Shuttring,Raft,Size,Totalamount)"
+"VALUES (?,?,?,?,?,?,?,?,?,?)";
con = DriverManager.getConnection("jdbc:mysql://localhost/user","root","root");
pst = con.prepareStatement(sql);
pst.setString(1,cablenamefield.getText());
pst.setString(2,((JTextField) datecablefield.getDateEditor().getUiComponent()).getText());
pst.setFloat(3,Float.parseFloat(Quantityequip.getText()));
pst.setFloat(4,excavation);
pst.setFloat(5,pcc);
pst.setFloat(6,bar);
pst.setFloat(7,shuttring);
pst.setFloat(8,raft);


pst.setFloat(9,size1);
pst.setFloat(10,New_total);

//pst.setString(11,((JTextField) datecablefield.getDateEditor().getUiComponent()).getText());
pst.executeUpdate();
st.showTableData(tablecable, selectSite, s);
refresh();


       
        
        
    } catch (SQLException ex) {
       
        Logger.getLogger(NewcontractorForm.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_CablesubmitbuttonActionPerformed

    private void tablecableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablecableMouseClicked
           int i=tablecable.getSelectedRow();
        TableModel model=tablecable.getModel();
        id=Integer.parseInt(model.getValueAt(i, 0).toString());
         cablenamefield.setText(model.getValueAt(i,1).toString());
          String date=model.getValueAt(i,2).toString();
        Quantityequip.setText(model.getValueAt(i,3).toString());
        
        
         
         ((JTextField) datecablefield.getDateEditor().getUiComponent()).setText(date);
     
    }//GEN-LAST:event_tablecableMouseClicked

    private void excavationEquipfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excavationEquipfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_excavationEquipfieldActionPerformed

    private void barBARfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_barBARfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_barBARfieldActionPerformed

    private void cablebarRatefieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cablebarRatefieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cablebarRatefieldActionPerformed

    private void QuantityequipKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_QuantityequipKeyTyped
      char input=evt.getKeyChar();
       
    if((input<'0'|| input >'9') && input!= '\b' && input!='.'){
        JOptionPane.showMessageDialog(null,"Only Numbers");
    evt.consume();
    }
if(input=='.'){
count++;}
if(count>1){
    System.out.println();
    evt.consume();
    count--;
//JOptionPane.showMessageDialog(null,"Two Decimals are not allow");
}// TODO add your handling code here:
    }//GEN-LAST:event_QuantityequipKeyTyped

    private void excavationEquipfieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_excavationEquipfieldKeyTyped
 char input=evt.getKeyChar();
       
    if((input<'0'|| input >'9') && input!= '\b' && input!='.'){
        JOptionPane.showMessageDialog(null,"Only Numbers");
    evt.consume();
    }
if(input=='.'){
count++;}
if(count>1){
    System.out.println();
    evt.consume();
    count--;
//JOptionPane.showMessageDialog(null,"Two Decimals are not allow");
}   // TODO add your handling code here:
    }//GEN-LAST:event_excavationEquipfieldKeyTyped

    private void cableexcavationRatefieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cableexcavationRatefieldKeyTyped
 char input=evt.getKeyChar();
       
    if((input<'0'|| input >'9') && input!= '\b' && input!='.'){
        JOptionPane.showMessageDialog(null,"Only Numbers");
    evt.consume();
    }
if(input=='.'){
count++;}
if(count>1){
    System.out.println();
    evt.consume();
    count--;
//JOptionPane.showMessageDialog(null,"Two Decimals are not allow");
}       // TODO add your handling code here:
    }//GEN-LAST:event_cableexcavationRatefieldKeyTyped

    private void pccEqiofieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pccEqiofieldKeyTyped
 char input=evt.getKeyChar();
       
    if((input<'0'|| input >'9') && input!= '\b' && input!='.'){
        JOptionPane.showMessageDialog(null,"Only Numbers");
    evt.consume();
    }
if(input=='.'){
count++;}
if(count>1){
    System.out.println();
    evt.consume();
    count--;
//JOptionPane.showMessageDialog(null,"Two Decimals are not allow");
}        // TODO add your handling code here:
    }//GEN-LAST:event_pccEqiofieldKeyTyped

    private void contaddressfield2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_contaddressfield2KeyTyped
 char input=evt.getKeyChar();
       
    if((input<'0'|| input >'9') && input!= '\b' && input!='.'){
        JOptionPane.showMessageDialog(null,"Only Numbers");
    evt.consume();
    }
if(input=='.'){
count++;}
if(count>1){
    System.out.println();
    evt.consume();
    count--;
//JOptionPane.showMessageDialog(null,"Two Decimals are not allow");
}      // TODO add your handling code here:
    }//GEN-LAST:event_contaddressfield2KeyTyped

    private void barBARfieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_barBARfieldKeyTyped
 char input=evt.getKeyChar();
       
    if((input<'0'|| input >'9') && input!= '\b' && input!='.'){
        JOptionPane.showMessageDialog(null,"Only Numbers");
    evt.consume();
    }
if(input=='.'){
count++;}
if(count>1){
    System.out.println();
    evt.consume();
    count--;
//JOptionPane.showMessageDialog(null,"Two Decimals are not allow");
}        // TODO add your handling code here:
    }//GEN-LAST:event_barBARfieldKeyTyped

    private void cablebarRatefieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cablebarRatefieldKeyTyped
 char input=evt.getKeyChar();
       
    if((input<'0'|| input >'9') && input!= '\b' && input!='.'){
        JOptionPane.showMessageDialog(null,"Only Numbers");
    evt.consume();
    }
if(input=='.'){
count++;}
if(count>1){
    System.out.println();
    evt.consume();
    count--;
//JOptionPane.showMessageDialog(null,"Two Decimals are not allow");
}        // TODO add your handling code here:
    }//GEN-LAST:event_cablebarRatefieldKeyTyped

    private void shuttringEQuipfiledKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_shuttringEQuipfiledKeyTyped
 char input=evt.getKeyChar();
       
    if((input<'0'|| input >'9') && input!= '\b' && input!='.'){
        JOptionPane.showMessageDialog(null,"Only Numbers");
    evt.consume();
    }
if(input=='.'){
count++;}
if(count>1){
    System.out.println();
    evt.consume();
    count--;
//JOptionPane.showMessageDialog(null,"Two Decimals are not allow");
}       // TODO add your handling code here:
    }//GEN-LAST:event_shuttringEQuipfiledKeyTyped

    private void cableshuttringratefieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cableshuttringratefieldKeyTyped
 char input=evt.getKeyChar();
       
    if((input<'0'|| input >'9') && input!= '\b' && input!='.'){
        JOptionPane.showMessageDialog(null,"Only Numbers");
    evt.consume();
    }
if(input=='.'){
count++;}
if(count>1){
    System.out.println();
    evt.consume();
    count--;
//JOptionPane.showMessageDialog(null,"Two Decimals are not allow");
}       // TODO add your handling code here:
    }//GEN-LAST:event_cableshuttringratefieldKeyTyped

    private void LtextfieldCableKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_LtextfieldCableKeyTyped
 char input=evt.getKeyChar();
       
    if((input<'0'|| input >'9') && input!= '\b' && input!='.'){
        JOptionPane.showMessageDialog(null,"Only Numbers");
    evt.consume();
    }
if(input=='.'){
count++;}
if(count>1){
    System.out.println();
    evt.consume();
    count--;
//JOptionPane.showMessageDialog(null,"Two Decimals are not allow");
}       // TODO add your handling code here:
    }//GEN-LAST:event_LtextfieldCableKeyTyped

    private void bCablefieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bCablefieldKeyTyped
 char input=evt.getKeyChar();
       
    if((input<'0'|| input >'9') && input!= '\b' && input!='.'){
        JOptionPane.showMessageDialog(null,"Only Numbers");
    evt.consume();
    }
if(input=='.'){
count++;}
if(count>1){
    System.out.println();
    evt.consume();
    count--;
//JOptionPane.showMessageDialog(null,"Two Decimals are not allow");
}       // TODO add your handling code here:
    }//GEN-LAST:event_bCablefieldKeyTyped

    private void HCablefieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_HCablefieldKeyTyped
 char input=evt.getKeyChar();
       
    if((input<'0'|| input >'9') && input!= '\b' && input!='.'){
        JOptionPane.showMessageDialog(null,"Only Numbers");
    evt.consume();
    }
if(input=='.'){
count++;}
if(count>1){
    System.out.println();
    evt.consume();
    count--;
//JOptionPane.showMessageDialog(null,"Two Decimals are not allow");
}        // TODO add your handling code here:
    }//GEN-LAST:event_HCablefieldKeyTyped

    private void QuantityequipFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_QuantityequipFocusLost
count=0;        // TODO add your handling code here:
    }//GEN-LAST:event_QuantityequipFocusLost

    private void excavationEquipfieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_excavationEquipfieldFocusLost
count=0;        // TODO add your handling code here:
    }//GEN-LAST:event_excavationEquipfieldFocusLost

    private void cableexcavationRatefieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cableexcavationRatefieldFocusLost
count=0;        // TODO add your handling code here:
    }//GEN-LAST:event_cableexcavationRatefieldFocusLost

    private void pccEqiofieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pccEqiofieldFocusLost
count=0;        // TODO add your handling code here:
    }//GEN-LAST:event_pccEqiofieldFocusLost

    private void contaddressfield2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_contaddressfield2FocusLost
count=0;        // TODO add your handling code here:
    }//GEN-LAST:event_contaddressfield2FocusLost

    private void barBARfieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_barBARfieldFocusLost
count=0;        // TODO add your handling code here:
    }//GEN-LAST:event_barBARfieldFocusLost

    private void cablebarRatefieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cablebarRatefieldFocusLost
count=0;        // TODO add your handling code here:
    }//GEN-LAST:event_cablebarRatefieldFocusLost

    private void shuttringEQuipfiledFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_shuttringEQuipfiledFocusLost
count=0;        // TODO add your handling code here:
    }//GEN-LAST:event_shuttringEQuipfiledFocusLost

    private void cableshuttringratefieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cableshuttringratefieldFocusLost
count=0;        // TODO add your handling code here:
    }//GEN-LAST:event_cableshuttringratefieldFocusLost

    private void LtextfieldCableFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_LtextfieldCableFocusLost
count=0;        // TODO add your handling code here:
    }//GEN-LAST:event_LtextfieldCableFocusLost

    private void bCablefieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_bCablefieldFocusLost
count=0;        // TODO add your handling code here:
    }//GEN-LAST:event_bCablefieldFocusLost

    private void HCablefieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_HCablefieldFocusLost
count=0;        // TODO add your handling code here:
    }//GEN-LAST:event_HCablefieldFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equalsIgnoreCase(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CableTracingFrom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CableTracingFrom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CableTracingFrom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CableTracingFrom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CableTracingFrom().setVisible(true);
            }
        });
    }
    public void showTableData(){
try{
    
        String name=selectSite.getSelectedItem().toString();
        String tablename=name+s;
        System.out.println(tablename);
        
con = DriverManager.getConnection("jdbc:mysql://localhost/user","root","root");
rs=con.getMetaData().getTables(null, null, null, null);
while(rs.next()){
    String check=rs.getString("Table_Name");
if(check!=null &&check.equalsIgnoreCase(tablename)){
    
String sql = "SELECT * FROM "+tablename;
System.out.println(sql);
pst = con.prepareStatement(sql);
rs=pst.executeQuery();
tablecable.setModel(DbUtils.resultSetToTableModel(rs));
}}}
catch(Exception ex){
JOptionPane.showMessageDialog(null, ex);
 
}
 
}
   private void refresh(){
   //cablenamefield.setText("0");
   HCablefield.setText("0");
   LtextfieldCable.setText("0");
   Quantityequip.setText("0");
   bCablefield.setText("0");
   barBARfield.setText("0");
   cablebarRatefield.setText("0");
   cableexcavationRatefield.setText("0");
    cableshuttringratefield .setText("0");
    contaddressfield2.setText("0");       
   // datecablefield.setDateFormatString("0");
    excavationEquipfield.setText("0");
            pccEqiofield.setText("0");
            shuttringEQuipfiled.setText("0");
   }
   
   private void remian(){
try{
   if(selectSite.getSelectedItem()!=null){
        String name=selectSite.getSelectedItem().toString();
        String tablename=name+s;
con = DriverManager.getConnection("jdbc:mysql://localhost/user","root","root");
rs=con.getMetaData().getTables(null, null, null, null);
while(rs.next()){
    String check=rs.getString("Table_Name");
if(check!=null &&check.equalsIgnoreCase(tablename)){
String sql = "SELECT Totalamount FROM "+tablename+" ORDER BY ID DESC LIMIT 1";
  //  System.out.println(sql);
pst = con.prepareStatement(sql);
rs=pst.executeQuery();
rs.next();
total=rs.getFloat(1);
 //System.out.println(total);
//System.out.println(remaining);
}}}
   else{
   return;
   }

}
catch(Exception ex){
   // System.out.println("mai chal tha");
    total=0;
//JOptionPane.showMessageDialog(null, ex);
 
}


}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Cabledelbuttton;
    private javax.swing.JButton Cablesubmitbutton;
    private javax.swing.JTextField HCablefield;
    private javax.swing.JTextField LtextfieldCable;
    private javax.swing.JTextField Quantityequip;
    private javax.swing.JLabel Shuttringtower;
    private javax.swing.JTextField bCablefield;
    private javax.swing.JButton backcablewrbutton;
    private javax.swing.JTextField barBARfield;
    private javax.swing.JLabel barbindtower;
    private javax.swing.JTextField cablebarRatefield;
    private javax.swing.JTextField cableexcavationRatefield;
    private javax.swing.JLabel cableheadinglabel;
    private javax.swing.JTextField cablenamefield;
    private javax.swing.JTextField cableshuttringratefield;
    private javax.swing.JLabel completetower;
    private javax.swing.JTextField contaddressfield2;
    private com.toedter.calendar.JDateChooser datecablefield;
    private javax.swing.JLabel datetowerlabel1;
    private javax.swing.JTextField excavationEquipfield;
    private javax.swing.JLabel excavationtower;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField pccEqiofield;
    private javax.swing.JLabel pcctower;
    private javax.swing.JComboBox<String> selectSite;
    private javax.swing.JTextField shuttringEQuipfiled;
    private javax.swing.JLabel size;
    private javax.swing.JTable tablecable;
    private javax.swing.JLabel totaltower;
    // End of variables declaration//GEN-END:variables
}
