
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.TableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Dell
 */
public class EquipmentForm extends javax.swing.JFrame {
    Connection con = null;
PreparedStatement pst = null;
ResultSet rs = null;
 int count=0;
    float excavation;
    float pcc;
    float bar;
    float shuttring;
    float raft;
    float Boltleftfield;
   float Boltfinal;
    float size1;
   float totalamount;
   int id;
   float total;
    String s="equipment";
    
    void total(){
         excavation =Float.parseFloat(excavationEquiprfield.getText())*Float.parseFloat(ExcavationRateEQuip.getText());
         pcc =Float.parseFloat(pccEQUIPfield.getText())*Float.parseFloat(PccRateEquip.getText());
         bar =Float.parseFloat(barEQUIPfield.getText())*Float.parseFloat(contmobilefield2.getText());
         shuttring =Float.parseFloat(shuttringEQUIPfiled.getText())*Float.parseFloat(ShuttringrateEquip.getText());
         raft =Float.parseFloat(raftEQUIPfiield.getText())*Float.parseFloat(contaddressfield3.getText());
         Boltleftfield =Float.parseFloat(BoltleftEQUIPfield.getText())*Float.parseFloat(BoltingrateFirst.getText());
         Boltfinal =Float.parseFloat(boltingfinalEQUIP.getText())*Float.parseFloat(BoltingfinalrateEquip.getText());
          size1 =Float.parseFloat(ltextfieldEQUIP.getText())*Float.parseFloat(bEQUIPfield.getText())*Float.parseFloat(hEQUIPfield.getText());
         totalamount=excavation+pcc+bar+shuttring+raft+Boltleftfield+Boltfinal;
    }
   
showTable st=new showTable();

    /**
     * Creates new form EquipmentForm
     */
    public EquipmentForm() {
        
        initComponents();
        st.ShowdropDown(selectSIteEquipment);
        st.showTableData(TableEquip, selectSIteEquipment, s);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        EQUIPdelbuttton = new javax.swing.JButton();
        boltingfinalEQUIP = new javax.swing.JTextField();
        excavationEquiprfield = new javax.swing.JTextField();
        excavationtower = new javax.swing.JLabel();
        EQUIPsubmitbutton = new javax.swing.JButton();
        barbindtower = new javax.swing.JLabel();
        Shuttringtower = new javax.swing.JLabel();
        ltextfieldEQUIP = new javax.swing.JTextField();
        size = new javax.swing.JLabel();
        pccEQUIPfield = new javax.swing.JTextField();
        totaltower = new javax.swing.JLabel();
        bEQUIPfield = new javax.swing.JTextField();
        pcctower = new javax.swing.JLabel();
        hEQUIPfield = new javax.swing.JTextField();
        EQUIPupdatebutton = new javax.swing.JButton();
        BoltingfinalrateEquip = new javax.swing.JTextField();
        NameEQuipfield = new javax.swing.JTextField();
        ExcavationRateEQuip = new javax.swing.JTextField();
        PccRateEquip = new javax.swing.JTextField();
        EQUIPtowerbutton = new javax.swing.JButton();
        contmobilefield2 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        TableEquip = new javax.swing.JTable();
        completetower = new javax.swing.JLabel();
        contaddressfield3 = new javax.swing.JTextField();
        ShuttringrateEquip = new javax.swing.JTextField();
        BoltingrateFirst = new javax.swing.JTextField();
        labelboltingfirst = new javax.swing.JLabel();
        quantEquipField = new javax.swing.JTextField();
        labelfinal = new javax.swing.JLabel();
        barEQUIPfield = new javax.swing.JTextField();
        raftEQUIPfiield = new javax.swing.JTextField();
        shuttringEQUIPfiled = new javax.swing.JTextField();
        BoltleftEQUIPfield = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        labelraft = new javax.swing.JLabel();
        dateEquipfield = new com.toedter.calendar.JDateChooser();
        datetowerlabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        selectSIteEquipment = new javax.swing.JComboBox<String>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        EQUIPdelbuttton.setText("Delete");
        EQUIPdelbuttton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EQUIPdelbutttonActionPerformed(evt);
            }
        });

        boltingfinalEQUIP.setText("0");
        boltingfinalEQUIP.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                boltingfinalEQUIPFocusLost(evt);
            }
        });
        boltingfinalEQUIP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                boltingfinalEQUIPKeyTyped(evt);
            }
        });

        excavationEquiprfield.setText("0");
        excavationEquiprfield.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                excavationEquiprfieldFocusLost(evt);
            }
        });
        excavationEquiprfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                excavationEquiprfieldKeyTyped(evt);
            }
        });

        excavationtower.setText("Excavation");

        EQUIPsubmitbutton.setText("Submit");
        EQUIPsubmitbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EQUIPsubmitbuttonActionPerformed(evt);
            }
        });

        barbindtower.setText("Bar Binding");

        Shuttringtower.setText("Shuttring");

        ltextfieldEQUIP.setText("0");
        ltextfieldEQUIP.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                ltextfieldEQUIPFocusLost(evt);
            }
        });
        ltextfieldEQUIP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ltextfieldEQUIPKeyTyped(evt);
            }
        });

        size.setText("Size");

        pccEQUIPfield.setText("0");
        pccEQUIPfield.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                pccEQUIPfieldFocusLost(evt);
            }
        });
        pccEQUIPfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pccEQUIPfieldKeyTyped(evt);
            }
        });

        totaltower.setText("Name  ");

        bEQUIPfield.setText("0");
        bEQUIPfield.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                bEQUIPfieldFocusLost(evt);
            }
        });
        bEQUIPfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEQUIPfieldActionPerformed(evt);
            }
        });
        bEQUIPfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                bEQUIPfieldKeyTyped(evt);
            }
        });

        pcctower.setText("Pcc");

        hEQUIPfield.setText("0");
        hEQUIPfield.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                hEQUIPfieldFocusLost(evt);
            }
        });
        hEQUIPfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                hEQUIPfieldKeyTyped(evt);
            }
        });

        EQUIPupdatebutton.setText("Update");
        EQUIPupdatebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EQUIPupdatebuttonActionPerformed(evt);
            }
        });

        BoltingfinalrateEquip.setText("0");
        BoltingfinalrateEquip.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                BoltingfinalrateEquipFocusLost(evt);
            }
        });
        BoltingfinalrateEquip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoltingfinalrateEquipActionPerformed(evt);
            }
        });
        BoltingfinalrateEquip.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                BoltingfinalrateEquipKeyTyped(evt);
            }
        });

        ExcavationRateEQuip.setText("0");
        ExcavationRateEQuip.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                ExcavationRateEQuipFocusLost(evt);
            }
        });
        ExcavationRateEQuip.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ExcavationRateEQuipKeyTyped(evt);
            }
        });

        PccRateEquip.setText("0");
        PccRateEquip.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                PccRateEquipFocusLost(evt);
            }
        });
        PccRateEquip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PccRateEquipActionPerformed(evt);
            }
        });
        PccRateEquip.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                PccRateEquipKeyTyped(evt);
            }
        });

        EQUIPtowerbutton.setText("Back");
        EQUIPtowerbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EQUIPtowerbuttonActionPerformed(evt);
            }
        });

        contmobilefield2.setText("0");
        contmobilefield2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                contmobilefield2FocusLost(evt);
            }
        });
        contmobilefield2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                contmobilefield2KeyTyped(evt);
            }
        });

        TableEquip.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Date", "Quantity", "Excavatiion", "Pcc", "Bar Binding", "Shuttring", "Raft", "Bolting First Left", "Bolting Final Left", "Date", "Size", "Total Amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        TableEquip.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableEquipMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(TableEquip);

        completetower.setText("Quantity");

        contaddressfield3.setText("0");
        contaddressfield3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                contaddressfield3FocusLost(evt);
            }
        });
        contaddressfield3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                contaddressfield3KeyTyped(evt);
            }
        });

        ShuttringrateEquip.setText("0");
        ShuttringrateEquip.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                ShuttringrateEquipFocusLost(evt);
            }
        });
        ShuttringrateEquip.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ShuttringrateEquipKeyTyped(evt);
            }
        });

        BoltingrateFirst.setText("0");
        BoltingrateFirst.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                BoltingrateFirstFocusLost(evt);
            }
        });
        BoltingrateFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoltingrateFirstActionPerformed(evt);
            }
        });
        BoltingrateFirst.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                BoltingrateFirstKeyTyped(evt);
            }
        });

        labelboltingfirst.setText("Bolting First Left");

        quantEquipField.setText("0");
        quantEquipField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                quantEquipFieldFocusLost(evt);
            }
        });
        quantEquipField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantEquipFieldActionPerformed(evt);
            }
        });
        quantEquipField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                quantEquipFieldKeyTyped(evt);
            }
        });

        labelfinal.setText("Bolting Final Left");

        barEQUIPfield.setText("0");
        barEQUIPfield.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                barEQUIPfieldFocusLost(evt);
            }
        });
        barEQUIPfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                barEQUIPfieldKeyTyped(evt);
            }
        });

        raftEQUIPfiield.setText("0");
        raftEQUIPfiield.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                raftEQUIPfiieldFocusLost(evt);
            }
        });
        raftEQUIPfiield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                raftEQUIPfiieldActionPerformed(evt);
            }
        });
        raftEQUIPfiield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                raftEQUIPfiieldKeyTyped(evt);
            }
        });

        shuttringEQUIPfiled.setText("0");
        shuttringEQUIPfiled.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                shuttringEQUIPfiledFocusLost(evt);
            }
        });
        shuttringEQUIPfiled.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shuttringEQUIPfiledActionPerformed(evt);
            }
        });
        shuttringEQUIPfiled.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                shuttringEQUIPfiledKeyTyped(evt);
            }
        });

        BoltleftEQUIPfield.setText("0");
        BoltleftEQUIPfield.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                BoltleftEQUIPfieldFocusLost(evt);
            }
        });
        BoltleftEQUIPfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                BoltleftEQUIPfieldKeyTyped(evt);
            }
        });

        jLabel1.setText("Add Equipment Details");

        labelraft.setText("Raft");

        datetowerlabel1.setText("Date");

        jLabel2.setText("Rate");

        jLabel3.setText("Select Site");

        selectSIteEquipment.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                selectSIteEquipmentPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(EQUIPtowerbutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGap(37, 37, 37)
                                    .addComponent(EQUIPdelbuttton))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(EQUIPsubmitbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(30, 30, 30)
                                    .addComponent(EQUIPupdatebutton)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(labelboltingfirst, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelraft, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelfinal)
                                    .addComponent(completetower, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(excavationEquiprfield, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pccEQUIPfield, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(barEQUIPfield, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(shuttringEQUIPfiled, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(raftEQUIPfiield, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(BoltleftEQUIPfield, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(boltingfinalEQUIP, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(quantEquipField, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(BoltingrateFirst, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(contaddressfield3, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ShuttringrateEquip, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(contmobilefield2, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(PccRateEquip, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ExcavationRateEQuip, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(BoltingfinalrateEquip, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGap(13, 13, 13)
                                        .addComponent(jLabel2))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(size, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(56, 56, 56)
                                .addComponent(ltextfieldEQUIP, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(bEQUIPfield, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(hEQUIPfield, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(barbindtower, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pcctower, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Shuttringtower, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(excavationtower, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(datetowerlabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(totaltower)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(48, 48, 48)
                                .addComponent(selectSIteEquipment, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(71, 71, 71)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(NameEQuipfield, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE)
                                .addGap(75, 75, 75))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(dateEquipfield, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 768, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(selectSIteEquipment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(totaltower)
                            .addComponent(NameEQuipfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(dateEquipfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(datetowerlabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(quantEquipField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(completetower)
                                .addComponent(jLabel2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(excavationEquiprfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(excavationtower))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pcctower)
                                    .addComponent(pccEQUIPfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(barbindtower)
                                    .addComponent(barEQUIPfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(shuttringEQUIPfiled, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Shuttringtower, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelraft)
                                    .addComponent(raftEQUIPfiield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelboltingfirst)
                                    .addComponent(BoltleftEQUIPfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(boltingfinalEQUIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelfinal, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(BoltingfinalrateEquip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ExcavationRateEQuip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(PccRateEquip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(contmobilefield2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(ShuttringrateEquip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(contaddressfield3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(BoltingrateFirst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(size, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ltextfieldEQUIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bEQUIPfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hEQUIPfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(EQUIPsubmitbutton)
                            .addComponent(EQUIPupdatebutton)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EQUIPtowerbutton)
                    .addComponent(EQUIPdelbuttton))
                .addGap(31, 31, 31))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void EQUIPdelbutttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EQUIPdelbutttonActionPerformed
         try {
      
               if(id==0){
                JOptionPane.showMessageDialog(null, "Please select The Field From Table First");
                return;
            }
        String name=selectSIteEquipment.getSelectedItem().toString();
        String tablename=name+s;
        con = DriverManager.getConnection("jdbc:mysql://localhost/user","root","root");
        

rs=con.getMetaData().getTables(null, null, null, null);
while(rs.next()){
    String check=rs.getString("Table_Name");
if(check!=null &&check.equalsIgnoreCase(tablename)){
String sql = "DELETE FROM "+tablename+" WHERE ID=?";
            con = DriverManager.getConnection("jdbc:mysql://localhost/user","root","root");
            pst = con.prepareStatement(sql);
            pst.setInt(1,id);
            pst.executeUpdate();
            st.showTableData(TableEquip, selectSIteEquipment, s);
            JOptionPane.showMessageDialog(null, "delete successfully");
refresh();
id=0;
return ;
}

}
        } catch (SQLException ex) {
       
        JOptionPane.showMessageDialog(null,  "please enter all the details or fill it correctly");
    }
    }//GEN-LAST:event_EQUIPdelbutttonActionPerformed

    private void EQUIPsubmitbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EQUIPsubmitbuttonActionPerformed
        try {
                 
            if(((JTextField) dateEquipfield.getDateEditor().getUiComponent()).getText().length()==0){
             JOptionPane.showMessageDialog(null, "Date Can not be empty");
             return;
                    }
                    if(NameEQuipfield.getText().length()==0){
                        JOptionPane.showMessageDialog(null, "Name Can not be empty");
             return;
                    }
            
                     total();
                     remian();

                     float New_total=total+totalamount;
                     //System.out.print(New_total);
                     
       
        String name=selectSIteEquipment.getSelectedItem().toString();
        
        String tablename=name+s;
        con = DriverManager.getConnection("jdbc:mysql://localhost/user","root","root");
        

rs=con.getMetaData().getTables(null, null, null, null);
while(rs.next()){
    String check=rs.getString("Table_Name");
if(check!=null &&check.equalsIgnoreCase(tablename)){
String sql = "INSERT INTO "+tablename
        +"(Name, Date, Quantity, Excavation, Pcc, BarBinding, Shuttring,Raft,BoltingFirst,BoltingFinal,Size,Totalamount)"
+"VALUES (?,?,?,?,?,?,?,?,?,?,?,?)";
con = DriverManager.getConnection("jdbc:mysql://localhost/user","root","root");
pst = con.prepareStatement(sql);
pst.setString(1, NameEQuipfield.getText());
pst.setString(2,((JTextField) dateEquipfield.getDateEditor().getUiComponent()).getText());
pst.setFloat(3,Float.parseFloat(quantEquipField.getText()));

pst.setFloat(4,excavation);
pst.setFloat(5,pcc);
pst.setFloat(6,bar);
pst.setFloat(7,shuttring);
pst.setFloat(8,raft);
pst.setFloat(9,Boltleftfield);
pst.setFloat(10,Boltfinal);

pst.setFloat(11,size1);
pst.setFloat(12,New_total);

pst.executeUpdate();
 st.showTableData(TableEquip, selectSIteEquipment, s);
refresh();
return ;
}

} 
  System.out.println("chal bc");
String sql1="CREATE TABLE "+ tablename +
                "("+"ID INT NOT NULL AUTO_INCREMENT, Name TEXT(20), Date TEXT(25),Quantity FLOAT(10),Excavation FLOAT(15),Pcc FLOAT(15),BarBinding FLOAT(10),Shuttring FLOAT(30),Raft FLOAT(30),BoltingFirst FLOAT(30)"
        + ",BoltingFinal FLOAT(30),Size FLOAT(30),Totalamount FLOAT(30),PRIMARY KEY(ID))";
//System.out.println(sql1);
con = DriverManager.getConnection("jdbc:mysql://localhost/user","root","root");
pst = con.prepareStatement(sql1);

pst.executeUpdate(sql1);
String sql = "INSERT INTO "+tablename
        +"(Name, Date, Quantity, Excavation, Pcc, BarBinding, Shuttring,Raft,BoltingFirst,BoltingFinal,Size,Totalamount)"
+"VALUES (?,?,?,?,?,?,?,?,?,?,?,?)";
con = DriverManager.getConnection("jdbc:mysql://localhost/user","root","root");
pst = con.prepareStatement(sql);
pst.setString(1, NameEQuipfield.getText());
pst.setString(2,((JTextField) dateEquipfield.getDateEditor().getUiComponent()).getText());
pst.setFloat(3,Float.parseFloat(quantEquipField.getText()));
pst.setFloat(4,excavation);
pst.setFloat(5,pcc);
pst.setFloat(6,bar);
pst.setFloat(7,shuttring);
pst.setFloat(8,raft);
pst.setFloat(9,Boltleftfield);
pst.setFloat(10,Boltfinal);

pst.setFloat(11,size1);
pst.setFloat(12,New_total);
pst.executeUpdate();
 st.showTableData(TableEquip, selectSIteEquipment, s);
refresh();


       
        
        
    } catch (SQLException ex) {
       
        Logger.getLogger(NewcontractorForm.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_EQUIPsubmitbuttonActionPerformed

    private void bEQUIPfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEQUIPfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bEQUIPfieldActionPerformed

    private void EQUIPupdatebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EQUIPupdatebuttonActionPerformed
        total();
        try {

               if(id==0){
                JOptionPane.showMessageDialog(null, "Please select The Field From Table First");
                return;
            }
            String name = selectSIteEquipment.getSelectedItem().toString();
            String tablename = name+s;
            con = DriverManager.getConnection("jdbc:mysql://localhost/user", "root", "root");

            rs = con.getMetaData().getTables(null, null, null, null);
            while (rs.next()) {
                String check = rs.getString("Table_Name");
                if (check != null && check.equalsIgnoreCase(tablename)) {
                    String sql = "UPDATE "+tablename+" SET Name=?, Date=?, Quantity=?, Excavation=?, Pcc=?, BarBinding=?, Shuttring=?,Raft=?,BoltingFirst=?,BoltingFinal=?,Size=?,Totalamount=? WHERE ID=?";
                    con = DriverManager.getConnection("jdbc:mysql://localhost/user", "root", "root");
                    //System.out.println(sql);
                    pst = con.prepareStatement(sql);
                    pst.setString(1, NameEQuipfield.getText());
pst.setString(2,((JTextField) dateEquipfield.getDateEditor().getUiComponent()).getText());
pst.setFloat(3,Float.parseFloat(quantEquipField.getText()));
pst.setFloat(4,excavation);
pst.setFloat(5,pcc);
pst.setFloat(6,bar);
pst.setFloat(7,shuttring);
pst.setFloat(8,raft);
pst.setFloat(9,Boltleftfield);
pst.setFloat(10,Boltfinal);

pst.setFloat(11,size1);
pst.setFloat(12,totalamount);
pst.setInt(13,id);
              
   pst.executeUpdate();
                   st.showTableData(TableEquip, selectSIteEquipment, s);

                   refresh();
                   id=0;
                    return;
                }

            }
        } catch (SQLException ex) {

            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_EQUIPupdatebuttonActionPerformed

    private void EQUIPtowerbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EQUIPtowerbuttonActionPerformed
        new WorkDone().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_EQUIPtowerbuttonActionPerformed

    private void BoltingfinalrateEquipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoltingfinalrateEquipActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BoltingfinalrateEquipActionPerformed

    private void TableEquipMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableEquipMouseClicked
        int i = TableEquip.getSelectedRow();
        TableModel model = TableEquip.getModel();

        id=Integer.parseInt(model.getValueAt(i, 0).toString());
        
        NameEQuipfield.setText(model.getValueAt(i, 1).toString());
        String date = model.getValueAt(i, 2).toString();
         quantEquipField.setText(model.getValueAt(i, 3).toString());

        ((JTextField) dateEquipfield.getDateEditor().getUiComponent()).setText(date);
    }//GEN-LAST:event_TableEquipMouseClicked

    private void selectSIteEquipmentPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_selectSIteEquipmentPopupMenuWillBecomeInvisible
         st.FillTableUSingcombo(selectSIteEquipment, TableEquip, s);
    }//GEN-LAST:event_selectSIteEquipmentPopupMenuWillBecomeInvisible

    private void quantEquipFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quantEquipFieldKeyTyped
 char input=evt.getKeyChar();
       
    if((input<'0'|| input >'9') && input!= '\b' && input!='.'){
        JOptionPane.showMessageDialog(null,"Only Numbers");
    evt.consume();
    }
if(input=='.'){
count++;}
if(count>1){
    System.out.println();
    evt.consume();
    count--;
JOptionPane.showMessageDialog(null,"Two Decimals are not allow");}         // TODO add your handling code here:
    }//GEN-LAST:event_quantEquipFieldKeyTyped

    private void PccRateEquipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PccRateEquipActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PccRateEquipActionPerformed

    private void shuttringEQUIPfiledActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shuttringEQUIPfiledActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_shuttringEQUIPfiledActionPerformed

    private void raftEQUIPfiieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_raftEQUIPfiieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_raftEQUIPfiieldActionPerformed

    private void BoltingrateFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoltingrateFirstActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BoltingrateFirstActionPerformed

    private void excavationEquiprfieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_excavationEquiprfieldKeyTyped
char input=evt.getKeyChar();
       
    if((input<'0'|| input >'9') && input!= '\b' && input!='.'){
        JOptionPane.showMessageDialog(null,"Only Numbers");
    evt.consume();
    }
if(input=='.'){
count++;}
if(count>1){
    System.out.println();
    evt.consume();
    count--;
//JOptionPane.showMessageDialog(null,"Two Decimals are not allow");
}       // TODO add your handling code here:
    }//GEN-LAST:event_excavationEquiprfieldKeyTyped

    private void ExcavationRateEQuipKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ExcavationRateEQuipKeyTyped
char input=evt.getKeyChar();
       
    if((input<'0'|| input >'9') && input!= '\b' && input!='.'){
        JOptionPane.showMessageDialog(null,"Only Numbers");
    evt.consume();
    }
if(input=='.'){
count++;}
if(count>1){
    System.out.println();
    evt.consume();
    count--;
//JOptionPane.showMessageDialog(null,"Two Decimals are not allow");
}       // TODO add your handling code here:
    }//GEN-LAST:event_ExcavationRateEQuipKeyTyped

    private void pccEQUIPfieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pccEQUIPfieldKeyTyped
char input=evt.getKeyChar();
       
    if((input<'0'|| input >'9') && input!= '\b' && input!='.'){
        JOptionPane.showMessageDialog(null,"Only Numbers");
    evt.consume();
    }
if(input=='.'){
count++;}
if(count>1){
    System.out.println();
    evt.consume();
    count--;
//JOptionPane.showMessageDialog(null,"Two Decimals are not allow");
}        // TODO add your handling code here:
    }//GEN-LAST:event_pccEQUIPfieldKeyTyped

    private void PccRateEquipKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PccRateEquipKeyTyped
char input=evt.getKeyChar();
       
    if((input<'0'|| input >'9') && input!= '\b' && input!='.'){
        JOptionPane.showMessageDialog(null,"Only Numbers");
    evt.consume();
    }
if(input=='.'){
count++;}
if(count>1){
    System.out.println();
    evt.consume();
    count--;
//JOptionPane.showMessageDialog(null,"Two Decimals are not allow");
}       // TODO add your handling code here:
    }//GEN-LAST:event_PccRateEquipKeyTyped

    private void barEQUIPfieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_barEQUIPfieldKeyTyped
char input=evt.getKeyChar();
       
    if((input<'0'|| input >'9') && input!= '\b' && input!='.'){
        JOptionPane.showMessageDialog(null,"Only Numbers");
    evt.consume();
    }
if(input=='.'){
count++;}
if(count>1){
    System.out.println();
    evt.consume();
    count--;
//JOptionPane.showMessageDialog(null,"Two Decimals are not allow");
}        // TODO add your handling code here:
    }//GEN-LAST:event_barEQUIPfieldKeyTyped

    private void contmobilefield2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_contmobilefield2KeyTyped
char input=evt.getKeyChar();
       
    if((input<'0'|| input >'9') && input!= '\b' && input!='.'){
        JOptionPane.showMessageDialog(null,"Only Numbers");
    evt.consume();
    }
if(input=='.'){
count++;}
if(count>1){
    System.out.println();
    evt.consume();
    count--;
//JOptionPane.showMessageDialog(null,"Two Decimals are not allow");
}        // TODO add your handling code here:
    }//GEN-LAST:event_contmobilefield2KeyTyped

    private void shuttringEQUIPfiledKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_shuttringEQUIPfiledKeyTyped
char input=evt.getKeyChar();
       
    if((input<'0'|| input >'9') && input!= '\b' && input!='.'){
        JOptionPane.showMessageDialog(null,"Only Numbers");
    evt.consume();
    }
if(input=='.'){
count++;}
if(count>1){
    System.out.println();
    evt.consume();
    count--;
//JOptionPane.showMessageDialog(null,"Two Decimals are not allow");
}       // TODO add your handling code here:
    }//GEN-LAST:event_shuttringEQUIPfiledKeyTyped

    private void ShuttringrateEquipKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ShuttringrateEquipKeyTyped
char input=evt.getKeyChar();
       
    if((input<'0'|| input >'9') && input!= '\b' && input!='.'){
        JOptionPane.showMessageDialog(null,"Only Numbers");
    evt.consume();
    }
if(input=='.'){
count++;}
if(count>1){
    System.out.println();
    evt.consume();
    count--;
//JOptionPane.showMessageDialog(null,"Two Decimals are not allow");
}       // TODO add your handling code here:
    }//GEN-LAST:event_ShuttringrateEquipKeyTyped

    private void raftEQUIPfiieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_raftEQUIPfiieldKeyTyped
char input=evt.getKeyChar();
       
    if((input<'0'|| input >'9') && input!= '\b' && input!='.'){
        JOptionPane.showMessageDialog(null,"Only Numbers");
    evt.consume();
    }
if(input=='.'){
count++;}
if(count>1){
    System.out.println();
    evt.consume();
    count--;
//JOptionPane.showMessageDialog(null,"Two Decimals are not allow");
}        // TODO add your handling code here:
    }//GEN-LAST:event_raftEQUIPfiieldKeyTyped

    private void contaddressfield3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_contaddressfield3KeyTyped
char input=evt.getKeyChar();
       
    if((input<'0'|| input >'9') && input!= '\b' && input!='.'){
        JOptionPane.showMessageDialog(null,"Only Numbers");
    evt.consume();
    }
if(input=='.'){
count++;}
if(count>1){
   // System.out.println();
    evt.consume();
    count--;
//JOptionPane.showMessageDialog(null,"Two Decimals are not allow");
}      // TODO add your handling code here:
    }//GEN-LAST:event_contaddressfield3KeyTyped

    private void BoltleftEQUIPfieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BoltleftEQUIPfieldKeyTyped
char input=evt.getKeyChar();
       
    if((input<'0'|| input >'9') && input!= '\b' && input!='.'){
        JOptionPane.showMessageDialog(null,"Only Numbers");
    evt.consume();
    }
if(input=='.'){
count++;}
if(count>1){
   // System.out.println();
    evt.consume();
    count--;
//JOptionPane.showMessageDialog(null,"Two Decimals are not allow");
}        // TODO add your handling code here:
    }//GEN-LAST:event_BoltleftEQUIPfieldKeyTyped

    private void BoltingrateFirstKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BoltingrateFirstKeyTyped
char input=evt.getKeyChar();
       
    if((input<'0'|| input >'9') && input!= '\b' && input!='.'){
        JOptionPane.showMessageDialog(null,"Only Numbers");
    evt.consume();
    }
if(input=='.'){
count++;}
if(count>1){
    //System.out.println();
    evt.consume();
    count--;
//JOptionPane.showMessageDialog(null,"Two Decimals are not allow");
}       // TODO add your handling code here:
    }//GEN-LAST:event_BoltingrateFirstKeyTyped

    private void boltingfinalEQUIPKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_boltingfinalEQUIPKeyTyped
char input=evt.getKeyChar();
       
    if((input<'0'|| input >'9') && input!= '\b' && input!='.'){
        JOptionPane.showMessageDialog(null,"Only Numbers");
    evt.consume();
    }
if(input=='.'){
count++;}
if(count>1){
    System.out.println();
    evt.consume();
    count--;
//JOptionPane.showMessageDialog(null,"Two Decimals are not allow");
}       // TODO add your handling code here:
    }//GEN-LAST:event_boltingfinalEQUIPKeyTyped

    private void BoltingfinalrateEquipKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BoltingfinalrateEquipKeyTyped
char input=evt.getKeyChar();
       
    if((input<'0'|| input >'9') && input!= '\b' && input!='.'){
        JOptionPane.showMessageDialog(null,"Only Numbers");
    evt.consume();
    }
if(input=='.'){
count++;}
if(count>1){
    System.out.println();
    evt.consume();
    count--;
//JOptionPane.showMessageDialog(null,"Two Decimals are not allow");
}       // TODO add your handling code here:
    }//GEN-LAST:event_BoltingfinalrateEquipKeyTyped

    private void ltextfieldEQUIPKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ltextfieldEQUIPKeyTyped
char input=evt.getKeyChar();
       
    if((input<'0'|| input >'9') && input!= '\b' && input!='.'){
        JOptionPane.showMessageDialog(null,"Only Numbers");
    evt.consume();
    }
if(input=='.'){
count++;}
if(count>1){
    System.out.println();
    evt.consume();
    count--;
//JOptionPane.showMessageDialog(null,"Two Decimals are not allow");
}        // TODO add your handling code here:
    }//GEN-LAST:event_ltextfieldEQUIPKeyTyped

    private void bEQUIPfieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bEQUIPfieldKeyTyped
char input=evt.getKeyChar();
       
    if((input<'0'|| input >'9') && input!= '\b' && input!='.'){
        JOptionPane.showMessageDialog(null,"Only Numbers");
    evt.consume();
    }
if(input=='.'){
count++;}
if(count>1){
    System.out.println();
    evt.consume();
    count--;
//JOptionPane.showMessageDialog(null,"Two Decimals are not allow");
}        // TODO add your handling code here:
    }//GEN-LAST:event_bEQUIPfieldKeyTyped

    private void hEQUIPfieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_hEQUIPfieldKeyTyped
char input=evt.getKeyChar();
       
    if((input<'0'|| input >'9') && input!= '\b' && input!='.'){
        JOptionPane.showMessageDialog(null,"Only Numbers");
    evt.consume();
    }
if(input=='.'){
count++;}
if(count>1){
    System.out.println();
    evt.consume();
    count--;
//JOptionPane.showMessageDialog(null,"Two Decimals are not allow");
}        // TODO add your handling code here:
    }//GEN-LAST:event_hEQUIPfieldKeyTyped

    private void quantEquipFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_quantEquipFieldFocusLost
count=0;        // TODO add your handling code here:
    }//GEN-LAST:event_quantEquipFieldFocusLost

    private void excavationEquiprfieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_excavationEquiprfieldFocusLost
    count=0;     // TODO add your handling code here:
    }//GEN-LAST:event_excavationEquiprfieldFocusLost

    private void ExcavationRateEQuipFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ExcavationRateEQuipFocusLost
count=0;         // TODO add your handling code here:
    }//GEN-LAST:event_ExcavationRateEQuipFocusLost

    private void pccEQUIPfieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pccEQUIPfieldFocusLost
count=0;         // TODO add your handling code here:
    }//GEN-LAST:event_pccEQUIPfieldFocusLost

    private void PccRateEquipFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PccRateEquipFocusLost
count=0;         // TODO add your handling code here:
    }//GEN-LAST:event_PccRateEquipFocusLost

    private void barEQUIPfieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_barEQUIPfieldFocusLost
count=0;         // TODO add your handling code here:
    }//GEN-LAST:event_barEQUIPfieldFocusLost

    private void contmobilefield2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_contmobilefield2FocusLost
count=0;         // TODO add your handling code here:
    }//GEN-LAST:event_contmobilefield2FocusLost

    private void shuttringEQUIPfiledFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_shuttringEQUIPfiledFocusLost
count=0;         // TODO add your handling code here:
    }//GEN-LAST:event_shuttringEQUIPfiledFocusLost

    private void ShuttringrateEquipFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ShuttringrateEquipFocusLost
count=0;         // TODO add your handling code here:
    }//GEN-LAST:event_ShuttringrateEquipFocusLost

    private void raftEQUIPfiieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_raftEQUIPfiieldFocusLost
count=0;         // TODO add your handling code here:
    }//GEN-LAST:event_raftEQUIPfiieldFocusLost

    private void contaddressfield3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_contaddressfield3FocusLost
count=0;         // TODO add your handling code here:
    }//GEN-LAST:event_contaddressfield3FocusLost

    private void BoltleftEQUIPfieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_BoltleftEQUIPfieldFocusLost
count=0;         // TODO add your handling code here:
    }//GEN-LAST:event_BoltleftEQUIPfieldFocusLost

    private void BoltingrateFirstFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_BoltingrateFirstFocusLost
count=0;         // TODO add your handling code here:
    }//GEN-LAST:event_BoltingrateFirstFocusLost

    private void boltingfinalEQUIPFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_boltingfinalEQUIPFocusLost
count=0;         // TODO add your handling code here:
    }//GEN-LAST:event_boltingfinalEQUIPFocusLost

    private void BoltingfinalrateEquipFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_BoltingfinalrateEquipFocusLost
count=0;         // TODO add your handling code here:
    }//GEN-LAST:event_BoltingfinalrateEquipFocusLost

    private void ltextfieldEQUIPFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ltextfieldEQUIPFocusLost
count=0;         // TODO add your handling code here:
    }//GEN-LAST:event_ltextfieldEQUIPFocusLost

    private void bEQUIPfieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_bEQUIPfieldFocusLost
count=0;         // TODO add your handling code here:
    }//GEN-LAST:event_bEQUIPfieldFocusLost

    private void hEQUIPfieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_hEQUIPfieldFocusLost
count=0;         // TODO add your handling code here:
    }//GEN-LAST:event_hEQUIPfieldFocusLost

    private void quantEquipFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantEquipFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quantEquipFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EquipmentForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EquipmentForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EquipmentForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EquipmentForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EquipmentForm().setVisible(true);
            }
        });
    }

    public void ShowdropDown(){
       
         selectSIteEquipment.removeAllItems();
        try{
con = DriverManager.getConnection("jdbc:mysql://localhost/user","root","root");
String sql = "SELECT * FROM site";
pst = con.prepareStatement(sql);
rs=pst.executeQuery(sql);
while((rs.next())){
    String name=rs.getString("sitename");
selectSIteEquipment.addItem(name);
}
 }catch(Exception ex){
     JOptionPane.showMessageDialog(null, ex);
     
 }
    }
    
    public void refresh(){
      //dateEquipfield.setDateFormatString("");
    PccRateEquip.setText("0");
    //NameEQuipfield.setText("0");
    BoltleftEQUIPfield.setText("0");
    excavationEquiprfield.setText("0");
    BoltingrateFirst.setText("0");
    BoltingfinalrateEquip.setText("0");
    ShuttringrateEquip.setText("0");
   
    bEQUIPfield.setText("0");
    ShuttringrateEquip.setText("0");
    contaddressfield3.setText("0");
    contmobilefield2.setText("0");
    raftEQUIPfiield.setText("0");
    shuttringEQUIPfiled.setText("0");
    ltextfieldEQUIP.setText("0");
    hEQUIPfield.setText("0");
    pccEQUIPfield.setText("0");
    ShuttringrateEquip.setText("0");
    boltingfinalEQUIP.setText("0");
    ExcavationRateEQuip.setText("0");
    quantEquipField.setText("0");
    barEQUIPfield.setText("0");
    }
     private void remian(){
try{
   if(selectSIteEquipment.getSelectedItem()!=null){
        String name=selectSIteEquipment.getSelectedItem().toString();
        String tablename=name+s;
con = DriverManager.getConnection("jdbc:mysql://localhost/user","root","root");
rs=con.getMetaData().getTables(null, null, null, null);
while(rs.next()){
    String check=rs.getString("Table_Name");
if(check!=null &&check.equalsIgnoreCase(tablename)){
String sql = "SELECT Totalamount FROM "+tablename+" ORDER BY ID DESC LIMIT 1";
    System.out.println(sql);
pst = con.prepareStatement(sql);
rs=pst.executeQuery();
rs.next();
total=rs.getInt(1);
 System.out.println(total);
//System.out.println(remaining);
}}}
   else{
   return;
   }

}
catch(Exception ex){
    System.out.println("mai chal tha");
    total=0;
//JOptionPane.showMessageDialog(null, ex);
 
}


}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField BoltingfinalrateEquip;
    private javax.swing.JTextField BoltingrateFirst;
    private javax.swing.JTextField BoltleftEQUIPfield;
    private javax.swing.JButton EQUIPdelbuttton;
    private javax.swing.JButton EQUIPsubmitbutton;
    private javax.swing.JButton EQUIPtowerbutton;
    private javax.swing.JButton EQUIPupdatebutton;
    private javax.swing.JTextField ExcavationRateEQuip;
    private javax.swing.JTextField NameEQuipfield;
    private javax.swing.JTextField PccRateEquip;
    private javax.swing.JTextField ShuttringrateEquip;
    private javax.swing.JLabel Shuttringtower;
    private javax.swing.JTable TableEquip;
    private javax.swing.JTextField bEQUIPfield;
    private javax.swing.JTextField barEQUIPfield;
    private javax.swing.JLabel barbindtower;
    private javax.swing.JTextField boltingfinalEQUIP;
    private javax.swing.JLabel completetower;
    private javax.swing.JTextField contaddressfield3;
    private javax.swing.JTextField contmobilefield2;
    private com.toedter.calendar.JDateChooser dateEquipfield;
    private javax.swing.JLabel datetowerlabel1;
    private javax.swing.JTextField excavationEquiprfield;
    private javax.swing.JLabel excavationtower;
    private javax.swing.JTextField hEQUIPfield;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelboltingfirst;
    private javax.swing.JLabel labelfinal;
    private javax.swing.JLabel labelraft;
    private javax.swing.JTextField ltextfieldEQUIP;
    private javax.swing.JTextField pccEQUIPfield;
    private javax.swing.JLabel pcctower;
    private javax.swing.JTextField quantEquipField;
    private javax.swing.JTextField raftEQUIPfiield;
    private javax.swing.JComboBox<String> selectSIteEquipment;
    private javax.swing.JTextField shuttringEQUIPfiled;
    private javax.swing.JLabel size;
    private javax.swing.JLabel totaltower;
    // End of variables declaration//GEN-END:variables
}
