
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.TableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author piyush veerbhan
 */
public class Drain extends javax.swing.JFrame {

    showTable st = new showTable();
    Connection con = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    int count;
    float excavation;
    float pcc;
    float bar;
    float shuttring;
    float BrickWork;
    float size;
   float totalamount;
   float total;
   int id;

    void total() {
        excavation = Float.parseFloat(Drainexcavafield.getText()) * Float.parseFloat(excarate.getText());
        pcc = Float.parseFloat(pccfiled.getText()) * Float.parseFloat(pccrate.getText());
        shuttring = Float.parseFloat(shutteringfield.getText()) * Float.parseFloat(shuttrate.getText());
        bar = Float.parseFloat(barbindingfiled.getText()) * Float.parseFloat(barbindingrate.getText());
        BrickWork = Float.parseFloat(brickworkfiled.getText()) * Float.parseFloat(brickrate.getText());
        size = Float.parseFloat(lenghtfiled.getText()) * Float.parseFloat(bgrainfiled.getText()) * Float.parseFloat(hdrainfiled.getText());
        totalamount = excavation + pcc + bar + shuttring+BrickWork;
    }

    /**
     * Creates new form Drain
     */
    public Drain() {
        initComponents();
        st.ShowdropDown(drainsitecombo);
        st.showTableData(Draintabl, drainsitecombo, "drain");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SiteNamelabel = new javax.swing.JLabel();
        btnsubmit = new javax.swing.JButton();
        SiteNamelabel5 = new javax.swing.JLabel();
        SiteNamelabel1 = new javax.swing.JLabel();
        SiteNamelabel6 = new javax.swing.JLabel();
        btnupdate = new javax.swing.JButton();
        dateDrain = new com.toedter.calendar.JDateChooser();
        SiteNamelabel2 = new javax.swing.JLabel();
        shutteringfield = new javax.swing.JTextField();
        btnbck = new javax.swing.JButton();
        SiteNamelabel3 = new javax.swing.JLabel();
        btndel = new javax.swing.JButton();
        barbindingfiled = new javax.swing.JTextField();
        pccfiled = new javax.swing.JTextField();
        SiteNamelabel4 = new javax.swing.JLabel();
        brickworkfiled = new javax.swing.JTextField();
        Drainexcavafield = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        Draintabl = new javax.swing.JTable();
        SiteNamelabel7 = new javax.swing.JLabel();
        namefielddrain = new javax.swing.JTextField();
        lenghtfiled = new javax.swing.JTextField();
        bgrainfiled = new javax.swing.JTextField();
        hdrainfiled = new javax.swing.JTextField();
        excarate = new javax.swing.JTextField();
        pccrate = new javax.swing.JTextField();
        shuttrate = new javax.swing.JTextField();
        barbindingrate = new javax.swing.JTextField();
        brickrate = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        drainsitecombo = new javax.swing.JComboBox<String>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        SiteNamelabel.setText("Name");

        btnsubmit.setText("Submit");
        btnsubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsubmitActionPerformed(evt);
            }
        });

        SiteNamelabel5.setText("Brick work");

        SiteNamelabel1.setText("Excavation");

        SiteNamelabel6.setText("Size");

        btnupdate.setText("Update");
        btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateActionPerformed(evt);
            }
        });

        SiteNamelabel2.setText("Shuttering");

        shutteringfield.setText("0");
        shutteringfield.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                shutteringfieldFocusLost(evt);
            }
        });
        shutteringfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                shutteringfieldKeyTyped(evt);
            }
        });

        btnbck.setText("Back");
        btnbck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbckActionPerformed(evt);
            }
        });

        SiteNamelabel3.setText("Bar Binding");

        btndel.setText("Delete");
        btndel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndelActionPerformed(evt);
            }
        });

        barbindingfiled.setText("0");
        barbindingfiled.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                barbindingfiledFocusLost(evt);
            }
        });
        barbindingfiled.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                barbindingfiledKeyTyped(evt);
            }
        });

        pccfiled.setText("0");
        pccfiled.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                pccfiledFocusLost(evt);
            }
        });
        pccfiled.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pccfiledActionPerformed(evt);
            }
        });
        pccfiled.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pccfiledKeyTyped(evt);
            }
        });

        SiteNamelabel4.setText("PCC");

        brickworkfiled.setText("0");
        brickworkfiled.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                brickworkfiledFocusLost(evt);
            }
        });
        brickworkfiled.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                brickworkfiledKeyTyped(evt);
            }
        });

        Drainexcavafield.setText("0");
        Drainexcavafield.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                DrainexcavafieldFocusLost(evt);
            }
        });
        Drainexcavafield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                DrainexcavafieldKeyTyped(evt);
            }
        });

        Draintabl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Date", "Excavation", "Pcc", "Shuttering", "Bar Binding", "Brick Work", "Size", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Draintabl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DraintablMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Draintabl);

        SiteNamelabel7.setText("    Date");

        lenghtfiled.setText("0");
        lenghtfiled.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                lenghtfiledFocusLost(evt);
            }
        });
        lenghtfiled.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                lenghtfiledKeyTyped(evt);
            }
        });

        bgrainfiled.setText("0");
        bgrainfiled.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                bgrainfiledFocusLost(evt);
            }
        });
        bgrainfiled.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bgrainfiledActionPerformed(evt);
            }
        });
        bgrainfiled.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                bgrainfiledKeyTyped(evt);
            }
        });

        hdrainfiled.setText("0");
        hdrainfiled.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                hdrainfiledFocusLost(evt);
            }
        });
        hdrainfiled.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                hdrainfiledKeyTyped(evt);
            }
        });

        excarate.setText("0");
        excarate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                excarateFocusLost(evt);
            }
        });
        excarate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excarateActionPerformed(evt);
            }
        });
        excarate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                excarateKeyTyped(evt);
            }
        });

        pccrate.setText("0");
        pccrate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                pccrateFocusLost(evt);
            }
        });
        pccrate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pccrateActionPerformed(evt);
            }
        });
        pccrate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pccrateKeyTyped(evt);
            }
        });

        shuttrate.setText("0");
        shuttrate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                shuttrateFocusLost(evt);
            }
        });
        shuttrate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                shuttrateKeyTyped(evt);
            }
        });

        barbindingrate.setText("0");
        barbindingrate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                barbindingrateFocusLost(evt);
            }
        });
        barbindingrate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                barbindingrateKeyTyped(evt);
            }
        });

        brickrate.setText("0");
        brickrate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                brickrateFocusLost(evt);
            }
        });
        brickrate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                brickrateKeyTyped(evt);
            }
        });

        jLabel3.setText("Rate");

        jLabel2.setText("         Drain ");

        jLabel4.setText("Select Site");

        drainsitecombo.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                drainsitecomboPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        drainsitecombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drainsitecomboActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SiteNamelabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(SiteNamelabel, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(namefielddrain, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dateDrain, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(brickworkfiled, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(barbindingfiled, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(shutteringfield, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pccfiled, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Drainexcavafield, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                            .addComponent(drainsitecombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(47, 47, 47)
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(SiteNamelabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(SiteNamelabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(SiteNamelabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(SiteNamelabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(SiteNamelabel5)
                                    .addComponent(btnsubmit)
                                    .addComponent(btnbck))
                                .addGap(11, 11, 11)
                                .addComponent(btnupdate)
                                .addGap(18, 18, 18)
                                .addComponent(btndel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(brickrate, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(barbindingrate, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(shuttrate, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pccrate, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(excarate, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(SiteNamelabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(23, 23, 23)
                                .addComponent(lenghtfiled, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(bgrainfiled, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(hdrainfiled, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 668, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 486, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(drainsitecombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SiteNamelabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(namefielddrain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(SiteNamelabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addComponent(dateDrain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(SiteNamelabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(Drainexcavafield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(excarate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(SiteNamelabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pccfiled, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pccrate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(SiteNamelabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(shutteringfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(shuttrate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(SiteNamelabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(barbindingfiled, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(barbindingrate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(SiteNamelabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(brickworkfiled, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(brickrate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(5, 5, 5)))
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SiteNamelabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lenghtfiled, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bgrainfiled, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hdrainfiled, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnsubmit)
                            .addComponent(btnupdate)
                            .addComponent(btndel))
                        .addGap(50, 50, 50)
                        .addComponent(btnbck)))
                .addContainerGap(64, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnbckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbckActionPerformed
        new WorkDone().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnbckActionPerformed

    private void pccfiledActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pccfiledActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pccfiledActionPerformed

    private void bgrainfiledActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bgrainfiledActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bgrainfiledActionPerformed

    private void excarateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excarateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_excarateActionPerformed

    private void drainsitecomboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drainsitecomboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_drainsitecomboActionPerformed

    private void btnsubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsubmitActionPerformed

        try {
            
            
            if(((JTextField) dateDrain.getDateEditor().getUiComponent()).getText().length()==0){
             JOptionPane.showMessageDialog(null, "Date Can not be empty");
             return;
                    }
                    if(namefielddrain.getText().length()==0){
                        JOptionPane.showMessageDialog(null, "Name Can not be empty");
             return;
                    }
                     total();
                     remian();

                     float New_total=total+totalamount;

            String name = drainsitecombo.getSelectedItem().toString();

            String tablename = name + "drain";
            con = DriverManager.getConnection("jdbc:mysql://localhost/user", "root", "root");

            rs = con.getMetaData().getTables(null, null, null, null);
            while (rs.next()) {
                String check = rs.getString("Table_Name");
                if (check != null && check.equalsIgnoreCase(tablename)) {
                    String sql = "INSERT INTO " + tablename
                            + "(Name, Date, Excavation, Pcc, BarBinding, BrickWork,Size,Totalamount)"
                            + "VALUES (?,?,?,?,?,?,?,?)";
                    con = DriverManager.getConnection("jdbc:mysql://localhost/user", "root", "root");
                    pst = con.prepareStatement(sql);
                    pst.setString(1, namefielddrain.getText());
                    pst.setString(2, ((JTextField) dateDrain.getDateEditor().getUiComponent()).getText());
                    pst.setFloat(3, excavation);
                    pst.setFloat(4, pcc);
                    pst.setFloat(5, bar);
                    pst.setFloat(6, BrickWork);
                    pst.setFloat(7, size);
                    pst.setFloat(8, New_total);

                    pst.executeUpdate();
                    st.showTableData(Draintabl, drainsitecombo, "drain");
refresh();
                    return;
                }

            }
            System.out.println("chal bc");
            String sql1 = "CREATE TABLE " + tablename
                    + "(" + "ID INT NOT NULL AUTO_INCREMENT,Name TEXT(20), Date TEXT(25),Excavation FLOAT(15),Pcc FLOAT(15),BarBinding FLOAT(10),"
                    + "Brickwork FLOAT(30),Size FLOAT(30),Totalamount FLOAT(30),PRIMARY KEY(ID))";
            //System.out.println(sql1);
            con = DriverManager.getConnection("jdbc:mysql://localhost/user", "root", "root");
            pst = con.prepareStatement(sql1);

            pst.executeUpdate(sql1);
            String sql = "INSERT INTO " + tablename
                    + "(Name, Date, Excavation, Pcc, BarBinding, BrickWork,Size,Totalamount)"
                    + "VALUES (?,?,?,?,?,?,?,?)";
            con = DriverManager.getConnection("jdbc:mysql://localhost/user", "root", "root");
            pst = con.prepareStatement(sql);
            pst.setString(1, namefielddrain.getText());
            pst.setString(2, ((JTextField) dateDrain.getDateEditor().getUiComponent()).getText());
             pst.setFloat(3, excavation);
                    pst.setFloat(4, pcc);
                    pst.setFloat(5, bar);
                    pst.setFloat(6, BrickWork);
                    pst.setFloat(7, size);
            pst.setFloat(8, New_total);
           
            
            pst.executeUpdate();
            st.showTableData(Draintabl, drainsitecombo, "drain");refresh();

        } catch (SQLException ex) {

            Logger.getLogger(NewcontractorForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnsubmitActionPerformed

    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed
        
        try {

               if(id==0){
                JOptionPane.showMessageDialog(null, "Please select The Field From Table First");
                return;
            }
               total();
            String name = drainsitecombo.getSelectedItem().toString();
            String tablename = name+"drain";
            con = DriverManager.getConnection("jdbc:mysql://localhost/user", "root", "root");

            rs = con.getMetaData().getTables(null, null, null, null);
            while (rs.next()) {
                String check = rs.getString("Table_Name");
                if (check != null && check.equalsIgnoreCase(tablename)) {
                    String sql = "UPDATE "+tablename+" SET Name=?,Date=?,Excavation=?,Pcc=?,BarBinding=?,BrickWork=?,Size=?,Totalamount=? WHERE ID=?";
                    con = DriverManager.getConnection("jdbc:mysql://localhost/user", "root", "root");
                    //System.out.println(sql);
                    pst = con.prepareStatement(sql);
                    pst.setString(1, namefielddrain.getText());
                    pst.setString(2, ((JTextField) dateDrain.getDateEditor().getUiComponent()).getText());
                    pst.setFloat(3, excavation);
                    pst.setFloat(4, pcc);
                    pst.setFloat(5, bar);
                    pst.setFloat(6, BrickWork);
                    pst.setFloat(7, size);
                    pst.setFloat(8, totalamount);
                    pst.setInt(9, id);
              
                    pst.executeUpdate();
                    st.showTableData(Draintabl, drainsitecombo, "drain");
refresh();
                    return;
                }

            }
        } catch (SQLException ex) {

            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_btnupdateActionPerformed
public void refresh(){
    
    
    Drainexcavafield.setText("0");
    barbindingfiled.setText("0");
    barbindingrate.setText("0");
     bgrainfiled.setText("0");
    brickrate.setText("0");
    brickworkfiled.setText("0");
    //dateDrain.setDateFormatString("0");
    excarate.setText("0");
    hdrainfiled.setText("0");
    lenghtfiled.setText("0");
    //namefielddrain.setText("0");
    pccfiled.setText("0");
    pccrate.setText("0");
    shutteringfield.setText("0");
    shuttrate.setText("0");
    }
    private void drainsitecomboPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_drainsitecomboPopupMenuWillBecomeInvisible
        st.FillTableUSingcombo(drainsitecombo, Draintabl, "drain");
    }//GEN-LAST:event_drainsitecomboPopupMenuWillBecomeInvisible

    private void DraintablMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DraintablMouseClicked
        int i = Draintabl.getSelectedRow();
        TableModel model = Draintabl.getModel();
        id=Integer.parseInt(model.getValueAt(i, 0).toString());
        
        namefielddrain.setText(model.getValueAt(i, 1).toString());
        
        String date1=model.getValueAt(i,2).toString();
        ((JTextField) dateDrain.getDateEditor().getUiComponent()).setText(date1);
       

    }//GEN-LAST:event_DraintablMouseClicked

    private void btndelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndelActionPerformed
        try {
       
        String name=drainsitecombo.getSelectedItem().toString();
        String tablename=name+"drain";
        con = DriverManager.getConnection("jdbc:mysql://localhost/user","root","root");
        

rs=con.getMetaData().getTables(null, null, null, null);
while(rs.next()){
    String check=rs.getString("Table_Name");
if(check!=null &&check.equalsIgnoreCase(tablename)){
String sql = "DELETE FROM "+tablename+" WHERE date=?";
            con = DriverManager.getConnection("jdbc:mysql://localhost/user","root","root");
            pst = con.prepareStatement(sql);
            pst.setString(1,((JTextField) dateDrain.getDateEditor().getUiComponent()).getText());
            pst.executeUpdate();
            st.showTableData(Draintabl, drainsitecombo, "drain");
            JOptionPane.showMessageDialog(null, "delete successfully");
refresh();
return ;
}

}
        } catch (SQLException ex) {
       
        JOptionPane.showMessageDialog(null,  "please enter all the details or fill it correctly");
    }
    }//GEN-LAST:event_btndelActionPerformed

    private void pccrateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pccrateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pccrateActionPerformed

    private void DrainexcavafieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DrainexcavafieldKeyTyped
        char input=evt.getKeyChar();
       
    if((input<'0'|| input >'9') && input!= '\b' && input!='.'){
        JOptionPane.showMessageDialog(null,"Only Numbers");
    evt.consume();
    }
if(input=='.'){
count++;}
if(count>1){
    System.out.println();
    evt.consume();
    count--;
//JOptionPane.showMessageDialog(null,"Two Decimals are not allow");
}
    }//GEN-LAST:event_DrainexcavafieldKeyTyped

    private void excarateKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_excarateKeyTyped
 char input=evt.getKeyChar();
       
    if((input<'0'|| input >'9') && input!= '\b' && input!='.'){
        JOptionPane.showMessageDialog(null,"Only Numbers");
    evt.consume();
    }
if(input=='.'){
count++;}
if(count>1){
    System.out.println();
    evt.consume();
    count--;
//JOptionPane.showMessageDialog(null,"Two Decimals are not allow");
}     // TODO add your handling code here:
    }//GEN-LAST:event_excarateKeyTyped

    private void pccfiledKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pccfiledKeyTyped
 char input=evt.getKeyChar();
       
    if((input<'0'|| input >'9') && input!= '\b' && input!='.'){
        JOptionPane.showMessageDialog(null,"Only Numbers");
    evt.consume();
    }
if(input=='.'){
count++;}
if(count>1){
    System.out.println();
    evt.consume();
    count--;
//JOptionPane.showMessageDialog(null,"Two Decimals are not allow");
}      // TODO add your handling code here:
    }//GEN-LAST:event_pccfiledKeyTyped

    private void pccrateKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pccrateKeyTyped
 char input=evt.getKeyChar();
       
    if((input<'0'|| input >'9') && input!= '\b' && input!='.'){
        JOptionPane.showMessageDialog(null,"Only Numbers");
    evt.consume();
    }
if(input=='.'){
count++;}
if(count>1){
    System.out.println();
    evt.consume();
    count--;
//JOptionPane.showMessageDialog(null,"Two Decimals are not allow");
}        // TODO add your handling code here:
    }//GEN-LAST:event_pccrateKeyTyped

    private void shutteringfieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_shutteringfieldKeyTyped
 char input=evt.getKeyChar();
       
    if((input<'0'|| input >'9') && input!= '\b' && input!='.'){
        JOptionPane.showMessageDialog(null,"Only Numbers");
    evt.consume();
    }
if(input=='.'){
count++;}
if(count>1){
    System.out.println();
    evt.consume();
    count--;
//JOptionPane.showMessageDialog(null,"Two Decimals are not allow");
}      // TODO add your handling code here:
    }//GEN-LAST:event_shutteringfieldKeyTyped

    private void shuttrateKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_shuttrateKeyTyped
 char input=evt.getKeyChar();
       
    if((input<'0'|| input >'9') && input!= '\b' && input!='.'){
        JOptionPane.showMessageDialog(null,"Only Numbers");
    evt.consume();
    }
if(input=='.'){
count++;}
if(count>1){
    System.out.println();
    evt.consume();
    count--;
//JOptionPane.showMessageDialog(null,"Two Decimals are not allow");
}        // TODO add your handling code here:
    }//GEN-LAST:event_shuttrateKeyTyped

    private void barbindingfiledKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_barbindingfiledKeyTyped
 char input=evt.getKeyChar();
       
    if((input<'0'|| input >'9') && input!= '\b' && input!='.'){
        JOptionPane.showMessageDialog(null,"Only Numbers");
    evt.consume();
    }
if(input=='.'){
count++;}
if(count>1){
    System.out.println();
    evt.consume();
    count--;
//JOptionPane.showMessageDialog(null,"Two Decimals are not allow");
}        // TODO add your handling code here:
    }//GEN-LAST:event_barbindingfiledKeyTyped

    private void barbindingrateKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_barbindingrateKeyTyped
 char input=evt.getKeyChar();
       
    if((input<'0'|| input >'9') && input!= '\b' && input!='.'){
        JOptionPane.showMessageDialog(null,"Only Numbers");
    evt.consume();
    }
if(input=='.'){
count++;}
if(count>1){
    System.out.println();
    evt.consume();
    count--;
//JOptionPane.showMessageDialog(null,"Two Decimals are not allow");
}        // TODO add your handling code here:
    }//GEN-LAST:event_barbindingrateKeyTyped

    private void brickworkfiledKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_brickworkfiledKeyTyped
 char input=evt.getKeyChar();
       
    if((input<'0'|| input >'9') && input!= '\b' && input!='.'){
        JOptionPane.showMessageDialog(null,"Only Numbers");
    evt.consume();
    }
if(input=='.'){
count++;}
if(count>1){
    System.out.println();
    evt.consume();
    count--;
//JOptionPane.showMessageDialog(null,"Two Decimals are not allow");
}        // TODO add your handling code here:
    }//GEN-LAST:event_brickworkfiledKeyTyped

    private void brickrateKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_brickrateKeyTyped
 char input=evt.getKeyChar();
       
    if((input<'0'|| input >'9') && input!= '\b' && input!='.'){
        JOptionPane.showMessageDialog(null,"Only Numbers");
    evt.consume();
    }
if(input=='.'){
count++;}
if(count>1){
    System.out.println();
    evt.consume();
    count--;
//JOptionPane.showMessageDialog(null,"Two Decimals are not allow");
}        // TODO add your handling code here:
    }//GEN-LAST:event_brickrateKeyTyped

    private void lenghtfiledKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lenghtfiledKeyTyped
 char input=evt.getKeyChar();
       
    if((input<'0'|| input >'9') && input!= '\b' && input!='.'){
        JOptionPane.showMessageDialog(null,"Only Numbers");
    evt.consume();
    }
if(input=='.'){
count++;}
if(count>1){
    System.out.println();
    evt.consume();
    count--;
//JOptionPane.showMessageDialog(null,"Two Decimals are not allow");
}        // TODO add your handling code here:
    }//GEN-LAST:event_lenghtfiledKeyTyped

    private void bgrainfiledKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bgrainfiledKeyTyped
 char input=evt.getKeyChar();
       
    if((input<'0'|| input >'9') && input!= '\b' && input!='.'){
        JOptionPane.showMessageDialog(null,"Only Numbers");
    evt.consume();
    }
if(input=='.'){
count++;}
if(count>1){
    System.out.println();
    evt.consume();
    count--;
//JOptionPane.showMessageDialog(null,"Two Decimals are not allow");
}        // TODO add your handling code here:
    }//GEN-LAST:event_bgrainfiledKeyTyped

    private void hdrainfiledKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_hdrainfiledKeyTyped
 char input=evt.getKeyChar();
       
    if((input<'0'|| input >'9') && input!= '\b' && input!='.'){
        JOptionPane.showMessageDialog(null,"Only Numbers");
    evt.consume();
    }
if(input=='.'){
count++;}
if(count>1){
    System.out.println();
    evt.consume();
    count--;
//JOptionPane.showMessageDialog(null,"Two Decimals are not allow");
}        // TODO add your handling code here:
    }//GEN-LAST:event_hdrainfiledKeyTyped

    private void DrainexcavafieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DrainexcavafieldFocusLost
count=0;        // TODO add your handling code here:
    }//GEN-LAST:event_DrainexcavafieldFocusLost

    private void excarateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_excarateFocusLost
    count=0;      // TODO add your handling code here:
    }//GEN-LAST:event_excarateFocusLost

    private void pccfiledFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pccfiledFocusLost
count=0;          // TODO add your handling code here:
    }//GEN-LAST:event_pccfiledFocusLost

    private void pccrateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pccrateFocusLost
count=0;          // TODO add your handling code here:
    }//GEN-LAST:event_pccrateFocusLost

    private void shutteringfieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_shutteringfieldFocusLost
count=0;          // TODO add your handling code here:
    }//GEN-LAST:event_shutteringfieldFocusLost

    private void shuttrateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_shuttrateFocusLost
count=0;          // TODO add your handling code here:
    }//GEN-LAST:event_shuttrateFocusLost

    private void barbindingfiledFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_barbindingfiledFocusLost
count=0;          // TODO add your handling code here:
    }//GEN-LAST:event_barbindingfiledFocusLost

    private void barbindingrateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_barbindingrateFocusLost
count=0;          // TODO add your handling code here:
    }//GEN-LAST:event_barbindingrateFocusLost

    private void brickworkfiledFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_brickworkfiledFocusLost
count=0;          // TODO add your handling code here:
    }//GEN-LAST:event_brickworkfiledFocusLost

    private void brickrateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_brickrateFocusLost
count=0;          // TODO add your handling code here:
    }//GEN-LAST:event_brickrateFocusLost

    private void lenghtfiledFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_lenghtfiledFocusLost
count=0;          // TODO add your handling code here:
    }//GEN-LAST:event_lenghtfiledFocusLost

    private void bgrainfiledFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_bgrainfiledFocusLost
count=0;          // TODO add your handling code here:
    }//GEN-LAST:event_bgrainfiledFocusLost

    private void hdrainfiledFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_hdrainfiledFocusLost
count=0;          // TODO add your handling code here:
    }//GEN-LAST:event_hdrainfiledFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Drain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Drain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Drain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Drain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Drain().setVisible(true);
            }
        });
    }
private void remian(){
try{
   if(drainsitecombo.getSelectedItem()!=null){
        String name=drainsitecombo.getSelectedItem().toString();
        String tablename=name+"drain";
con = DriverManager.getConnection("jdbc:mysql://localhost/user","root","root");
rs=con.getMetaData().getTables(null, null, null, null);
while(rs.next()){
    String check=rs.getString("Table_Name");
if(check!=null &&check.equalsIgnoreCase(tablename)){
String sql = "SELECT Totalamount FROM "+tablename+" ORDER BY ID DESC LIMIT 1";
    System.out.println(sql);
pst = con.prepareStatement(sql);
rs=pst.executeQuery();
rs.next();
total=rs.getInt(1);
 //System.out.println(total);
//System.out.println(remaining);
}}}
   else{
   return;
   }

}
catch(Exception ex){
    System.out.println("mai chal tha");
    total=0;
//JOptionPane.showMessageDialog(null, ex);
 
}


}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Drainexcavafield;
    private javax.swing.JTable Draintabl;
    private javax.swing.JLabel SiteNamelabel;
    private javax.swing.JLabel SiteNamelabel1;
    private javax.swing.JLabel SiteNamelabel2;
    private javax.swing.JLabel SiteNamelabel3;
    private javax.swing.JLabel SiteNamelabel4;
    private javax.swing.JLabel SiteNamelabel5;
    private javax.swing.JLabel SiteNamelabel6;
    private javax.swing.JLabel SiteNamelabel7;
    private javax.swing.JTextField barbindingfiled;
    private javax.swing.JTextField barbindingrate;
    private javax.swing.JTextField bgrainfiled;
    private javax.swing.JTextField brickrate;
    private javax.swing.JTextField brickworkfiled;
    private javax.swing.JButton btnbck;
    private javax.swing.JButton btndel;
    private javax.swing.JButton btnsubmit;
    private javax.swing.JButton btnupdate;
    private com.toedter.calendar.JDateChooser dateDrain;
    private javax.swing.JComboBox<String> drainsitecombo;
    private javax.swing.JTextField excarate;
    private javax.swing.JTextField hdrainfiled;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lenghtfiled;
    private javax.swing.JTextField namefielddrain;
    private javax.swing.JTextField pccfiled;
    private javax.swing.JTextField pccrate;
    private javax.swing.JTextField shutteringfield;
    private javax.swing.JTextField shuttrate;
    // End of variables declaration//GEN-END:variables
}
