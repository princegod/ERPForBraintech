
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author piyush veerbhan
 */
public class Tools extends javax.swing.JFrame {
Connection con = null;
PreparedStatement pst = null;
ResultSet rs = null;
 
    /**
     * Creates new form Tools
     */
    public Tools() throws SQLException {
        initComponents();
        ShowCombo();
        showTableData();
    }
private void ShowCombo() throws SQLException{
    
con = DriverManager.getConnection("jdbc:mysql://localhost/user","root","root");
String sql = "SELECT * FROM site";
pst = con.prepareStatement(sql);
rs=pst.executeQuery(sql);
while((rs.next())){
    String name=rs.getString("SiteName");
combotools.addItem(name);


}}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        toolsnamefield = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        toolquantfield = new javax.swing.JTextField();
        DAte = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        toolsnamefield3 = new javax.swing.JTextField();
        toolsdate = new com.toedter.calendar.JDateChooser();
        toolbtnadd = new javax.swing.JButton();
        toolbtnupdate = new javax.swing.JButton();
        toolbtndel = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tooltable = new javax.swing.JTable();
        toolbtnbck = new javax.swing.JButton();
        DAte1 = new javax.swing.JLabel();
        combotools = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Name Of Tool");

        toolsnamefield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolsnamefieldActionPerformed(evt);
            }
        });

        jLabel2.setText("Quantity");

        toolquantfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolquantfieldActionPerformed(evt);
            }
        });
        toolquantfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                toolquantfieldKeyTyped(evt);
            }
        });

        DAte.setText("Date");

        jLabel4.setText("Receiver");

        toolsnamefield3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolsnamefield3ActionPerformed(evt);
            }
        });

        toolbtnadd.setText("Add");
        toolbtnadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolbtnaddActionPerformed(evt);
            }
        });

        toolbtnupdate.setText("Update");
        toolbtnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolbtnupdateActionPerformed(evt);
            }
        });

        toolbtndel.setText("Delete");
        toolbtndel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolbtndelActionPerformed(evt);
            }
        });

        tooltable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name OF Tools", "Quantity", "Receiver", "Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tooltable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tooltableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tooltable);

        toolbtnbck.setText("Back");
        toolbtnbck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toolbtnbckActionPerformed(evt);
            }
        });

        DAte1.setText("Select Site Name");

        combotools.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                combotoolsPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(118, 118, 118)
                                .addComponent(toolbtnupdate))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(toolbtnadd, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(36, 36, 36)
                        .addComponent(toolbtndel))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(toolbtnbck)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(42, 42, 42)
                                    .addComponent(toolquantfield, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(42, 42, 42)
                                    .addComponent(toolsnamefield, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(42, 42, 42)
                                    .addComponent(toolsnamefield3, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(DAte, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(DAte1))
                                .addGap(35, 35, 35)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(toolsdate, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                                    .addComponent(combotools, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 591, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DAte1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combotools, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DAte)
                    .addComponent(toolsdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(toolsnamefield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(toolquantfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(toolsnamefield3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(toolbtnadd)
                    .addComponent(toolbtnupdate)
                    .addComponent(toolbtndel))
                .addGap(77, 77, 77)
                .addComponent(toolbtnbck)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 65, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void toolsnamefieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolsnamefieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_toolsnamefieldActionPerformed

    private void toolquantfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolquantfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_toolquantfieldActionPerformed

    private void toolsnamefield3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolsnamefield3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_toolsnamefield3ActionPerformed

    private void toolbtnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolbtnupdateActionPerformed
     try {
      
      
   
        String name=combotools.getSelectedItem().toString();
        String tablename=name+"tools";
        con = DriverManager.getConnection("jdbc:mysql://localhost/user","root","root");
        

rs=con.getMetaData().getTables(null, null, null, null);
while(rs.next()){
    
    String check=rs.getString("Table_Name");
if(check!=null &&check.equalsIgnoreCase(tablename)){
String sql = "UPDATE "+tablename
        +" SET Date=?, Nameoftool=?, Quantity=?, Receiver=? WHERE Date=?";
con = DriverManager.getConnection("jdbc:mysql://localhost/user","root","root");
pst = con.prepareStatement(sql);
pst.setString(1,((JTextField) toolsdate.getDateEditor().getUiComponent()).getText());
pst.setString(2,toolsnamefield.getText());
pst.setString(3,toolquantfield.getText());
pst.setString(4,toolsnamefield3.getText());
pst.setString(5,((JTextField) toolsdate.getDateEditor().getUiComponent()).getText());
pst.executeUpdate();
showTableData();
refresh();
return ;
}

} 

} catch (SQLException ex) {
       
        Logger.getLogger(NewcontractorForm.class.getName()).log(Level.SEVERE, null, ex);
    }  
    }//GEN-LAST:event_toolbtnupdateActionPerformed

    private void toolbtnbckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolbtnbckActionPerformed
        new viewSiteform().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_toolbtnbckActionPerformed
public void showTableData(){

 try{
    
        String name=combotools.getSelectedItem().toString();
        String tablename=name+"tools";
con = DriverManager.getConnection("jdbc:mysql://localhost/user","root","root");
rs=con.getMetaData().getTables(null, null, null, null);
while(rs.next()){
    String check=rs.getString("Table_Name");
if(check!=null &&check.equalsIgnoreCase(tablename)){
String sql = "SELECT * FROM "+tablename;
pst = con.prepareStatement(sql);
rs=pst.executeQuery();
tooltable.setModel(DbUtils.resultSetToTableModel(rs));
}}}
catch(Exception ex){

  JOptionPane.showMessageDialog(null,"Please Add A Site First");
}

 
}
    private void toolbtnaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolbtnaddActionPerformed
       try {
      if(((JTextField) toolsdate.getDateEditor().getUiComponent()).getText().length()==0){
             JOptionPane.showMessageDialog(null, "Date Can not be empty");
             return;
                    }
                    if(toolsnamefield.getText().length()==0){
                        JOptionPane.showMessageDialog(null, "Name Can not be empty");
             return;
                    }
      
   
        String name=combotools.getSelectedItem().toString();
        String tablename=name+"tools";
        con = DriverManager.getConnection("jdbc:mysql://localhost/user","root","root");
        

rs=con.getMetaData().getTables(null, null, null, null);
while(rs.next()){
    
    String check=rs.getString("Table_Name");
if(check!=null &&check.equalsIgnoreCase(tablename)){
String sql = "INSERT INTO "+tablename
        +"(Date, Nameoftool, Quantity, Receiver)"
+"VALUES (?,?,?,?)";
con = DriverManager.getConnection("jdbc:mysql://localhost/user","root","root");
pst = con.prepareStatement(sql);
pst.setString(1,((JTextField) toolsdate.getDateEditor().getUiComponent()).getText());
pst.setString(2,toolsnamefield.getText());
pst.setString(3,toolquantfield.getText());
pst.setString(4,toolsnamefield3.getText());
pst.executeUpdate();
showTableData();
refresh();
return ;
}

} 

pst.executeUpdate("CREATE TABLE "+ tablename +
                "("+"Date TEXT(25),Nameoftool TEXT(35),Quantity VARCHAR(35),Receiver VARCHAR(25))");
String sql = "INSERT INTO "+tablename
        +"(Date, Nameoftool, Quantity, Receiver)"
+"VALUES (?,?,?,?)";
con = DriverManager.getConnection("jdbc:mysql://localhost/user","root","root");
pst = con.prepareStatement(sql);
pst.setString(1,((JTextField) toolsdate.getDateEditor().getUiComponent()).getText());
pst.setString(2,toolsnamefield.getText());
pst.setString(3,toolquantfield.getText());
pst.setString(4,toolsnamefield3.getText());
pst.executeUpdate();
showTableData();
refresh();


       
        
        
    } catch (SQLException ex) {
       
        Logger.getLogger(NewcontractorForm.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_toolbtnaddActionPerformed

    private void combotoolsPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_combotoolsPopupMenuWillBecomeInvisible
        try{
    
        String name=combotools.getSelectedItem().toString();
        String tablename=name+"tools";
con = DriverManager.getConnection("jdbc:mysql://localhost/user","root","root");
rs=con.getMetaData().getTables(null, null, null, null);
while(rs.next()){
    String check=rs.getString("Table_Name");
if(check!=null &&check.equalsIgnoreCase(tablename)){
String sql = "SELECT * FROM "+tablename;
pst = con.prepareStatement(sql);
rs=pst.executeQuery();
tooltable.setModel(DbUtils.resultSetToTableModel(rs));
}}}
catch(Exception ex){
JOptionPane.showMessageDialog(null, ex);
 
}
    }//GEN-LAST:event_combotoolsPopupMenuWillBecomeInvisible

    private void tooltableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tooltableMouseClicked
        int i=tooltable.getSelectedRow();
        TableModel model=tooltable.getModel();
        toolsnamefield.setText(model.getValueAt(i,1).toString());
        String date=model.getValueAt(i,0).toString();
        toolquantfield.setText(model.getValueAt(i,2).toString());
        toolsnamefield3.setText(model.getValueAt(i,3).toString());
        ((JTextField) toolsdate.getDateEditor().getUiComponent()).setText(date);
        
    }//GEN-LAST:event_tooltableMouseClicked

    private void toolbtndelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toolbtndelActionPerformed
        try {
      
      
   
        String name=combotools.getSelectedItem().toString();
        String tablename=name+"tools";
        con = DriverManager.getConnection("jdbc:mysql://localhost/user","root","root");
        

rs=con.getMetaData().getTables(null, null, null, null);
while(rs.next()){
    
    String check=rs.getString("Table_Name");
if(check!=null &&check.equalsIgnoreCase(tablename)){
String sql = "DELETE FROM "+tablename
        +" WHERE Date=?";
con = DriverManager.getConnection("jdbc:mysql://localhost/user","root","root");
pst = con.prepareStatement(sql);
pst.setString(1,((JTextField) toolsdate.getDateEditor().getUiComponent()).getText());
pst.executeUpdate();
showTableData();
refresh();
return ;
}

} 

} catch (SQLException ex) {
       
        Logger.getLogger(NewcontractorForm.class.getName()).log(Level.SEVERE, null, ex);
    }  
    }//GEN-LAST:event_toolbtndelActionPerformed

    private void toolquantfieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_toolquantfieldKeyTyped
       char input=evt.getKeyChar();
       
    if((input<'0'|| input >'9') && input!= '\b'){
        JOptionPane.showMessageDialog(null,"Only Numbers");
    evt.consume();
    } // TODO add your handling code here:
    }//GEN-LAST:event_toolquantfieldKeyTyped
private void refresh(){
//toolsdate.setDateFormatString("");
toolsnamefield.setText("");
toolquantfield.setText("");
toolsnamefield3.setText("");


}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tools.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tools.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tools.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tools.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Tools().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(Tools.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel DAte;
    private javax.swing.JLabel DAte1;
    private javax.swing.JComboBox combotools;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton toolbtnadd;
    private javax.swing.JButton toolbtnbck;
    private javax.swing.JButton toolbtndel;
    private javax.swing.JButton toolbtnupdate;
    private javax.swing.JTextField toolquantfield;
    private com.toedter.calendar.JDateChooser toolsdate;
    private javax.swing.JTextField toolsnamefield;
    private javax.swing.JTextField toolsnamefield3;
    private javax.swing.JTable tooltable;
    // End of variables declaration//GEN-END:variables
}
